import{_ as o,r as n,o as c,c as r,a as s,w as l,b as t,d as a,e as p}from"./app.eb0aac19.js";const k=JSON.parse('{"title":"Great Blockquote","description":"","frontmatter":{},"headers":[{"level":2,"title":"Code","slug":"code","link":"#code","children":[]},{"level":2,"title":"SCSS variables","slug":"scss-variables","link":"#scss-variables","children":[]}],"relativePath":"atoms/cards/BlockquoteGreat.md"}'),d={name:"atoms/cards/BlockquoteGreat.md"},i=a("h1",{id:"great-blockquote",tabindex:"-1"},[t("Great Blockquote "),a("a",{class:"header-anchor",href:"#great-blockquote","aria-hidden":"true"},"#")],-1),y=p(`<h2 id="code" tabindex="-1">Code <a class="header-anchor" href="#code" aria-hidden="true">#</a></h2><div class="dev-section"><blockquote class="blockquote-great"><p> Design is not just what it looks like and feels like. Design is how it works. </p><cite>Steve Jobs</cite></blockquote></div><div class="language-html"><button title="Copy Code" class="copy"></button><span class="lang">html</span><pre class="shiki"><code><span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">blockquote</span><span style="color:#89DDFF;"> </span><span style="color:#C792EA;">class</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#C3E88D;">blockquote-great</span><span style="color:#89DDFF;">&quot;</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">            Design is not just what it looks like and feels like.</span></span>
<span class="line"><span style="color:#A6ACCD;">            Design is how it works.</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">p</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">        </span><span style="color:#89DDFF;">&lt;</span><span style="color:#F07178;">cite</span><span style="color:#89DDFF;">&gt;</span><span style="color:#A6ACCD;">Steve Jobs</span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">cite</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"><span style="color:#A6ACCD;">    </span><span style="color:#89DDFF;">&lt;/</span><span style="color:#F07178;">blockquote</span><span style="color:#89DDFF;">&gt;</span></span>
<span class="line"></span></code></pre></div><h2 id="scss-variables" tabindex="-1">SCSS variables <a class="header-anchor" href="#scss-variables" aria-hidden="true">#</a></h2><table><thead><tr><th style="text-align:left;">Variable</th><th style="text-align:left;">Description</th><th style="text-align:left;">Accepted Values</th><th style="text-align:left;">Default</th></tr></thead><tbody><tr><td style="text-align:left;"><code>$blockquote-great-color</code></td><td style="text-align:left;">Color of text</td><td style="text-align:left;"><code>color</code></td><td style="text-align:left;"><code>#000</code></td></tr><tr><td style="text-align:left;"><code>$blockquote-great-cite-color</code></td><td style="text-align:left;">Color of cite</td><td style="text-align:left;"><code>color</code></td><td style="text-align:left;"><code>same as color</code></td></tr><tr><td style="text-align:left;"><code>$blockquote-great-cite-text-color</code></td><td style="text-align:left;">Color of cite text</td><td style="text-align:left;"><code>color</code></td><td style="text-align:left;"><code>#fff</code></td></tr></tbody></table>`,5);function D(g,h,u,f,_,F){const e=n("Badge");return c(),r("div",null,[i,s(e,{type:"tip"},{default:l(()=>[t("Atom")]),_:1}),t(),s(e,{type:"info"},{default:l(()=>[t("Cards")]),_:1}),t(),s(e,{type:"info"},{default:l(()=>[t("Blockquote")]),_:1}),y])}const b=o(d,[["render",D]]);export{k as __pageData,b as default};
