import{_ as e,o as t,c as a,e as r}from"./app.eb0aac19.js";const m=JSON.parse('{"title":"Guebbit SCSS Library","description":"","frontmatter":{},"headers":[],"relativePath":"index.md"}'),i={name:"index.md"},o=r('<h1 id="guebbit-scss-library" tabindex="-1">Guebbit SCSS Library <a class="header-anchor" href="#guebbit-scss-library" aria-hidden="true">#</a></h1><p>MIT License, free to use</p><p>This library plans to be a large container of very different SCSS components, divided using the <a href="https://bradfrost.com/blog/post/atomic-web-design/" target="_blank" rel="noreferrer">Atomic Design Methodology</a></p><p>The best approach is not import the whole library but carefully choose the components that we want from it.</p><h1 id="todo" tabindex="-1">TODO <a class="header-anchor" href="#todo" aria-hidden="true">#</a></h1><p>/atoms/animations/ProgressionAlexWarnes[...] Da cambiare le variabili (magari mantenere le generiche ma mettere anche delle specifiche, per evitare facilmente conflitti)</p>',6),n=[o];function s(c,d,h,l,p,_){return t(),a("div",null,n)}const f=e(i,[["render",s]]);export{m as __pageData,f as default};
