@use "sass:math";
@import "index";

/*
builder_abscenter-xy

left: 50%;
top: 50%;
transform: translate(-50%, -50%);
*/

// https://codepen.io/Carlos1162/pen/eJdLXa
// https://codepen.io/Marina_Os/pen/OJyWPbL


$white-color: #fff;
$black-color: #000;
$primary-color: #00bcd4;
$secondary-color: #ff9800;
$background-color: #aaa;

$scss-library-prefix: "" !default;
%#{$scss-library-prefix}xxxxxxxxxxxxxxx,
.#{$scss-library-prefix}xxxxxxxxxxxxxxx {
  // ---
}

//body{
//  background: $background-color;
//}

// TODO mettere ::: raw <code> ::: ovunque
// TODO mettere variabili css ai vari item
// TODO mettere $scss-library-prefix: "" !default; ovunque (in vue-library metterÃ² guebbit-vue-?)
// TODO mettere abstract\silent class per ogni metodo? %....


// https://css-tricks.com/snippets/css/a-guide-to-flexbox/
// https://css-tricks.com/understanding-flex-grow-flex-shrink-and-flex-basis/
// https://guebbit.com/admin/login.php?k=29b5d51b87944c4762e19990

@import "components/atoms/buttons/SimpleButton";











$icon-focus-button-speed: 0.3s;
$icon-focus-button-color: $primary-color;

%#{$scss-library-prefix}icon-focus-button,
.#{$scss-library-prefix}icon-focus-button {
  @extend %simple-button;
  overflow: hidden;

  & > *{
    display: block;
    height: 100%;
    transition:
            transform $icon-focus-button-speed ease,
            border-width $icon-focus-button-speed ease,
            opacity $icon-focus-button-speed ease,
            width $icon-focus-button-speed ease,
            right $icon-focus-button-speed ease;

    &:nth-child(1){
      position: relative;
      right: 0;
      width: 70%;
    }
    &:nth-child(2){
      border-left: 2px solid $icon-focus-button-color;
      position: absolute;
      right: 0;
      top: 50%;
      width: 30%;
      transform: translateY(-50%);
    }
  }

  .button-image,
  .button-icon{
    position: relative;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    max-height: 100%;
    max-width: 100%;
    transition: font-size $icon-focus-button-speed ease;
  }

  &.animate-active,
  &.animate-on-active.active,
  &.animate-on-hover:hover {
    & > *{
      &:nth-child(1){
        right: 110%;
        opacity: 0;
      }
      &:nth-child(2){
        border-width: 0;
        width: 100%;
        .button-icon {
          font-size: 3em;
        }
      }
    }
  }
}









$svgTitle1-color1: $primary-color;
$svgTitle1-color2: #000;

$svgTitle1-height: 15px !default;
$svgTitle1-shadow: 0px 0px 20px #fff,
0px 0px 20px #fff,
0px 0px 20px #fff !default;
$svgTitle1-svg-height: 200px !default;
$svgTitle1-svg-width: 300px !default;

.svgTitle1 {
  font-size: 4.2rem;
  line-height: 110%;
  margin: 2.8rem 0 1.68rem 0;

  width: 100%;
  text-align: center;
  position: relative;
  text-decoration: none;
  text-shadow: $svgTitle1-shadow;
  color: $svgTitle1-color2;
  z-index: 1;
  //la linea che attraversa lo schermo
  &::before {
    content: "";
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    z-index: -2;
    background-color: #00bcd4;
    height: 15px;
    width: 100%;
  }
  // svg dietro
  .icon{
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    background-color: #fff;
    z-index: -1;
    width: $svgTitle1-svg-width;
    height: $svgTitle1-svg-height;
    polyline{
      stroke: $svgTitle1-color1;
      fill:none;
      stroke-width:14;
      stroke-miterlimit:10;
    }
  }
  &.v2{
    &::after {
      content:"";
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      z-index: -1;
      width: $svgTitle1-svg-width;
      height: $svgTitle1-svg-height;
      background: #fff no-repeat url('https://assets.guebbit.com/images/generic/beatline.svg');
      background-position: 50% 50%;
    }
  }
}



$lineTitle1-height: 15px !default;
$lineTitle1-shadow: 0px 0px 20px #fff,
0px 0px 20px #fff,
0px 0px 20px #fff !default;
$lineTitle1-hybrid-1: solid !default;
$lineTitle1-hybrid-2: dotted !default;

.lineTitle1 {
  font-size: 4.2rem;
  line-height: 110%;
  margin: 2.8rem 0 1.68rem 0;

  width: 100%;
  text-align: center;
  position: relative;
  text-decoration: none;
  text-shadow: $lineTitle1-shadow;
  z-index: 1;
  //la linea che attraversa lo schermo
  &::before {
    content: "";
    position: absolute;
    left: 50%;
    transform: translate(-50%, 0);
    z-index: -2;
    top: 50%;
    background-color: #00bcd4;
    height: 15px;
    width: 101%;
  }
  &.mixed{
    &::after {
      content: "";
      z-index: -1;
      position: absolute;
      right: 0;
      top: 50%;
      background-color:$secondary-color;
      height: $lineTitle1-height;
      width: 50%;
    }
    &-2{
      &::after {
        content: "";
        position: absolute;
        left: 50%;
        top: 50%;
        transform: translate(-50%, 0);
        z-index: -1;
        background-color:$secondary-color;
        height: $lineTitle1-height;
        width: 50%;
      }
    }
  }
  &.hybrid{
    &::before{
      height: 0;
      background-color: transparent;
      left: 0;
      border-top: $lineTitle1-height $lineTitle1-hybrid-1 $primary-color;
    }
    &::after{
      content: "";
      position: absolute;
      left: 50%;
      top: 50%;
      z-index: -2;
      width: 100%;
      border-top: $lineTitle1-height $lineTitle1-hybrid-2 $primary-color;
    }
  }
  &.dotted,
  &.dashed,
  &.double,
  &.groove{
    &::before {
      height: 0;
      background-color: transparent;
      border-top-width: $lineTitle1-height;
      border-top-color: $primary-color;
    }
  }
  &.dotted::before {
    border-top-style: dotted;
  }
  &.dotted::before {
    border-top-style: dotted;
  }
  &.dashed::before {
    border-top-style: dashed;
  }
  &.double::before {
    border-top-style: double;
  }
  &.groove::before {
    border-top-style: groove;
  }
  &.full{
    &::before,
    &::after{
      top: 0 !important;
      height: 100% !important;
      border-top-width: 1.2em !important;
    }
    &.dotted,
    &.dashed,
    &.double,
    &.groove,
    &.hybrid{
      &::before,
      &::after{
        height: 0 !important;
      }
    }
  }
}


















@import "components/molecules/cards/SimpleCard";

$card-panel-container-width: 70% !default;
$card-panel-padding: 24px !default;
$card-panel-shadow-color: $background-color !default;
$card-panel-shadow-corner: 25px !default;
$card-panel-shadow: (inset 0 0 $card-panel-shadow-corner $card-panel-shadow-corner $card-panel-shadow-color, inset 0 0 $card-panel-shadow-corner $card-panel-shadow-corner $card-panel-shadow-color);


.card-panel{
  @extend %simple-card;

  // TODO
  text-shadow: #fff 1px 0 10px;

  .container-static,
  .container-absolute {
    width: var(--card-panel-container-width, $card-panel-container-width);
  }

  .container-static {
    position: relative;
    z-index: 1;
    padding: var(--card-panel-padding, $card-panel-padding);
  }

  .container-absolute{
    position: absolute;
    top: 0;
    height: 100%;

    & > * {
      position: absolute;
      width: 100%;
      height: 100%;
      object-fit: cover;
      z-index: -1;
    }
  }

  & > * {
    &:first-child{
      &.container-absolute{
        left: 0;
      }
    }

    // correction if container order is switched
    &:last-child{
      &.container-static{
        margin-right: 0;
        margin-left: auto;
        text-align: right;

        .card-actions {
          flex-direction: row-reverse;
        }
      }

      &.container-absolute{
        right: 0;
      }
    }
  }

  &.card-shadow {
    &::after{
      z-index: 0;
    }
  }

  &.card-absolute-shadow{
    .container-absolute{
      box-shadow: var(--card-panel-shadow, $card-panel-shadow);
      height: calc(100% + $card-panel-shadow-corner);
      width: calc(var(--card-panel-container-width, $card-panel-container-width) + var(--card-panel-shadow-corner, $card-panel-shadow-corner));

      &:first-child{
        left: calc(var(--card-panel-shadow-corner, $card-panel-shadow-corner) * -1);
      }

      &:last-child{
        right: calc(var(--card-panel-shadow-corner, $card-panel-shadow-corner) * -1);
      }
    }
  }
}






$pricing-card-shadow-color: red !default;
$pricing-card-shadow-elevated:
        0 11px 15px -7px rgba($pricing-card-shadow-color, 0.2),
        0 24px 38px 3px rgba($pricing-card-shadow-color, 0.14),
        0 9px 46px 8px rgba($pricing-card-shadow-color, 0.12) !default;

.hyperplexed-card{
  // @extend %simple-card;

  --hyperplexed-card-primary: #ff6f00;
  --hyperplexed-card-secondary: #ffeb3b;
  --hyperplexed-card-background: #FFF;
  --hyperplexed-card-text: #3c3c3c;
  --hyperplexed-card-height: 400px;
  --hyperplexed-card-width: 500px;


  margin: 0 auto;
  height: var(--hyperplexed-card-height);
  pointer-events: initial;
  width: 100%;
  max-width: var(--hyperplexed-card-width);
  color: var(--hyperplexed-card-text);

  .card-image,
  .card-content {
    position: relative;
    height: 100%;
    display: inline-block;
    background-color: var(--hyperplexed-card-background);
    vertical-align: top;
    width: 50%;
  }

  .card-image{
    background-image: linear-gradient(45deg, var(--hyperplexed-card-secondary), var(--hyperplexed-card-primary));
    box-shadow: var(--pricing-card-shadow-elevated, $pricing-card-shadow-elevated);
    z-index: 1;

     & > *{
      position: absolute;
      top: 50%;
      left: -10%;
      transform: translateY(-50%);
      z-index: 2;
      min-width: 80%;
      box-shadow: var(--pricing-card-shadow-elevated, $pricing-card-shadow-elevated);
      border-radius: 50%;
    }
  }

  .card-content{
    z-index: 2;
    overflow: hidden;
    height: calc(100% + 48px);
    margin-top: -24px;
    box-shadow: var(--pricing-card-shadow-elevated, $pricing-card-shadow-elevated);
  }
}

$resume-card-color: $primary-color;

$resume-card-color: #000 !default;
$resume-card-padding: 24px !default;
$resume-card-border: 4px !default;

.resume-list-card{
  @extend %simple-card;

  flex-direction: row;
  align-items: center;
  gap: calc(var(--resume-card-padding, $resume-card-padding) * 2);
  padding: calc(var(--resume-card-padding, $resume-card-padding) * 2) 0;
  box-shadow: none;


  .card-header {
    white-space: nowrap;
    justify-content: center;
    font-size: 1.2em;
  }
  
  .card-content{
    position: relative;

    &::after{
      content: "";
      position: absolute;
      bottom: 0;
      left: 50%;
      transform: translateX(-50%);
      width: calc(100% - var(--resume-card-padding, $resume-card-padding) * 2);
      height: calc(var(--resume-card-border, $resume-card-border) * 0.5);
      background-color: $resume-card-color;
    }
  }

  .card-title{
    display: flex;
    align-items: center;
    justify-content: center;

    small{
      border-left: var(--resume-card-border, $resume-card-border) solid $resume-card-color;
      margin-left: var(--resume-card-padding, $resume-card-padding);
      padding-left: var(--resume-card-padding, $resume-card-padding);
      font-size: 0.5em;
    }
  }

  &.list-mode {
    padding: calc(var(--resume-card-padding, $resume-card-padding) * 3) 0;

    .card-content {
      position: relative;

      &::after {
        content: none;
      }
    }

    & + .resume-list-card{
      &::after{
        content: "";
        position: absolute;
        top: 0;
        left: 50%;
        transform: translateX(-50%);
        width: 50%;
        height: 4px;
        background-color: rgba($primary-color, 0.25);
      }
    }
  }
}


$chess-panel: 400px !default;

.chess-panel{
  display: flex;
  flex-wrap: wrap;

  & > * {
    width: 50%;
    height: $chess-panel;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    overflow: hidden;
  }

  & > img {
    object-fit: cover;
  }

  &.four-per-row{
    & > * {
      width: 25%;
    }
  }
}