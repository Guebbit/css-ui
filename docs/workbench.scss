@use "sass:math";
@use "theme" as guebbit;
@use "components/molecules/cards/SimpleCard";


$scss-library-component-name: "" !default;
$scss-library-var-prefix: "" !default;
$xxxxxxxxxxxxxxxxx: "" !default;
$scss-library-dark-theme-class: "" !default;

/*
builder_abscenter-xy

position: absolute;
left: 50%;
top: 50%;
transform: translate(-50%, -50%);
*/

// https://codepen.io/Carlos1162/pen/eJdLXa
// https://codepen.io/Marina_Os/pen/OJyWPbL

// https://getcssscan.com/css-buttons-examples
// https://codepen.io/josetxu/pen/NWyZWoJ
// https://codepen.io/MarkBoots/pen/XWVMWZw

$white-color: #fff;
$black-color: #000;
$primary-color: #00bcd4;
$secondary-color: #ff9800;
$background-color: #aaa;





@import "components/molecules/panels/SimplePanel";
@import "components/atoms/buttons/ButtonBrandIcon";

$scss-library-class-prefix: "" !default;
$user-social-panel-button-padding: 48px !default;
$user-social-panel-button-width: 300px !default;
$user-social-panel-shadow-color: #fff !default;
$user-social-panel-items-shadow-color: guebbit.color-contrast($user-social-panel-shadow-color) !default;
$user-social-panel-items-shadow: 0 24px 38px 3px rgba($user-social-panel-items-shadow-color,0.24),0 9px 46px 8px rgba($user-social-panel-items-shadow-color,0.16),0 11px 15px -7px rgba($user-social-panel-items-shadow-color,0.3) !default;

%#{$scss-library-class-prefix}user-social-panel,
.#{$scss-library-class-prefix}user-social-panel {
  @extend %simple-panel, .shadow-active;

  --simple-panel-shadow-color: #{$user-social-panel-shadow-color};

  .user-image {
    margin: var(--user-social-panel-button-padding, $user-social-panel-button-padding) auto 0 auto;
    border-radius: 28%;
    box-shadow: var(--user-social-panel-items-shadow, $user-social-panel-items-shadow);
    height: var(--user-social-panel-button-width, $user-social-panel-button-width);
    width: var(--user-social-panel-button-width, $user-social-panel-button-width);
    object-fit: cover;
  }

  .user-social-list {
    display: flex;
    align-items: center;
    justify-content: center;
    gap: var(--user-social-panel-button-padding, $user-social-panel-button-padding);
    padding: var(--user-social-panel-button-padding, $user-social-panel-button-padding);
    
    & > * {
      box-shadow: var(--user-social-panel-items-shadow, $user-social-panel-items-shadow);
    }
  }
}



$scss-library-class-prefix: "" !default;

%#{$scss-library-class-prefix}circular-team-card,
.#{$scss-library-class-prefix}circular-team-card {
  position: relative;
  margin: 0 auto;

  .card-image {
    position: relative;
    @include aspect-ratio-container(100%);

    &::after {
      content: '';
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      border-radius: 50%;
      border-width: 0;
      border-color: $primary-color;
      border-style: solid;
      transition: all .2s cubic-bezier(.06,.59,.24,1.55);
    }

    & > img{
      @include aspect-ratio-anchor(100%);
      border-radius: 50%;
      object-fit: cover;
    }
  }

  .card-title {
    text-align: center;
    margin-top: 20px;
    display: block;
    font-weight: 500;
    font-size: 18px;
  }

  &.border-dashed {
    .card-image {
      &::after {
        border-style: dashed;
      }
    }
  }

  &.border-dotted {
    .card-image {
      &::after {
        border-style: dotted;
      }
    }
  }

  &.animate-active,
  &.animate-on-active.active,
  &.animate-on-hover:hover {
    .card-image{
      &::after {
        transform: scale(1.15);
        border-color: $primary-color;
        border-width: 2px;
      }
    }
  }
}

.custom-border{
  color: $primary-color;
}

.custom-border{
  position: absolute;
  border: none;
  z-index: 9999;
  fill: currentColor;
  font-size: 0;	    // fix

  svg{
    fill: currentColor;
  }

  &.border-top,
  &.border-bottom{
    left: 0;
    width: 100%;
  }

  &.border-top{
    top: -1px;	    // fix
  }
  
  &.border-bottom{
    bottom: -1px;	// fix
  }

  //&.border-right,
  //&.border-left{
  //  top: 0;
  //  height: 100%;
  //}
  //
  //&.border-right{
  //  right: -1px;	// fix
  //}
  //
  //&.border-left{
  //  left: -1px;	    // fix
  //}

  &.border-rotate-90{
    transform: rotate(90deg);
  }
  &.border-rotate-180{
    transform: rotate(180deg);
  }
  &.border-rotate-270{
    transform: rotate(270deg);
  }
}



$collabPanel1-height: 100px;
$collabPanel1-width: 250px; // of single collabs
$circleLoad3-border: 8px;

.collabPanel1{
  height: $collabPanel1-height;
  position: relative;
  width: 100%;
  overflow: hidden;
  & > div{
    display: flex;
    animation: collabPanel1_a 40s linear infinite;
    width: $collabPanel1-width*10;
    & > div{
      height: $collabPanel1-height;
      width: $collabPanel1-width;
    }
  }
  img{
    height: 100%;
    transition: all 0.2s;
  }
  &.with-shadow{
    box-shadow: (0 4px 5px 0 rgba($black,0.14), 0 1px 10px 0 rgba($black,0.12), 0 2px 4px -1px rgba($black,0.3));
  }

  &:hover{
    & > div{
      animation-play-state: paused;
      img{
        &:hover{
          transform: scale(1.5);
        }
      }
    }
  }
}


@keyframes collabPanel1_a {
  0% {
    transform: translateX(0);
  }
  100% {
    transform: translateX(calc(-250px * 7));
  }
}


.collabPanel3{
  padding:50px 0;
  & > div{
    display:flex;
    flex-wrap: wrap;
    align-content: center;
    justify-content: center;
    & > div{
      margin: 1% 2%;
      max-width: 200px;
      overflow: hidden;
      transition: max-width 0.5s;
      &:hover{
        max-width: 300px;
      }
    }
  }
  img{
    max-width: 100%;
    height: auto;
  }
  &.v2{
    & > div{
      display:block;
      & > div{
        display: inline-block;
      }
    }
  }
}








$promoPanel1-delay: 0.2s !default;

.simple-promo-panel{
  display: flex;
  justify-content: space-between;
  align-items: center;

  .simple-card {
    &:nth-child(1){
      .card-icon{
        transition-delay: $promoPanel1-delay;
      }
    }
    &:nth-child(2){
      .card-icon{
        transition-delay: $promoPanel1-delay*2;
      }
    }
    &:nth-child(3){
      .card-icon{
        transition-delay: $promoPanel1-delay*3;
      }
    }
  }

  &.testme{
    .card-icon{
      transform: scale(0);
    }
  }

  &.animate-active,
  &.animate-on-active.active,
  &.animate-on-hover:hover {

    &.testme{
      .simple-card{
        .card-icon{
          transform: scale(1);
        }
      }
    }

    &.testme2{
      .card-icon{
        color: red;
      }
    }

  }
}

@import "components/organisms/cards/InfoHoverCard";

// https://guebbit.com/admin/view/264

.simple-promo-panel2{
  display: flex;
  justify-content: space-between;
  align-items: center;
}

$scss-library-class-prefix: "" !default;

$css-tooltip-speed: 0.2s !default;

%#{$scss-library-class-prefix}css-tooltip,
.#{$scss-library-class-prefix}css-tooltip {
  position: relative;
  display: inline-block;
  border-bottom: 1px dotted black; /* If you want dots under the hoverable text */

  .css-tooltip-text {
    visibility: hidden;
    width: 120px;
    background-color: black;
    color: #fff;
    text-align: center;
    padding: 5px 0;
    border-radius: 6px;

    /* Position the tooltip text - see examples below! */
    position: absolute;
    z-index: 1;

    &.tooltip{
      &-top,
      &-bottom{
        width: 120px;
        margin-left: -60px;
      }
      &-top{
        bottom: 100%;
        left: 50%;
      }
      &-bottom{
        top: 100%;
        left: 50%;
      }
      &-left,
      &-right{
        top: -5px;
      }
      &-left{
        right: 105%;
      }
      &-right{
        left: 105%;
      }
    }
  }

  &:hover{
    .css-tooltip-text {
      visibility: visible;
    }
  }
}




























@import "components/molecules/cards/SimpleCard";

$card-panel-button-color: $primary-color;

$card-panel-button-color: transparent !default;
$card-panel-container-width: 70% !default;
$card-panel-padding: 24px !default;
$card-panel-shadow-color: $background-color !default;
$card-panel-shadow-corner: 25px !default;
$card-panel-shadow: (inset 0 0 $card-panel-shadow-corner $card-panel-shadow-corner $card-panel-shadow-color, inset 0 0 $card-panel-shadow-corner $card-panel-shadow-corner $card-panel-shadow-color);

// https://guebbit.com/admin/view/242

.card-panel{
  @extend %simple-card;

  --simple-button-color: var(--card-panel-button-color, #{$card-panel-button-color});

  // TODO
  text-shadow: #fff 1px 0 10px;

  .container-static,
  .container-absolute {
    width: var(--card-panel-container-width, $card-panel-container-width);
  }

  .container-static {
    position: relative;
    z-index: 1;
    padding: var(--card-panel-padding, $card-panel-padding);
  }

  .container-absolute{
    position: absolute;
    top: 0;
    height: 100%;

    & > * {
      position: absolute;
      width: 100%;
      height: 100%;
      object-fit: cover;
      z-index: -1;
    }
  }

  & > * {
    &:first-child{
      &.container-absolute{
        left: 0;
      }
    }

    // correction if container order is switched
    &:last-child{
      &.container-static{
        margin-right: 0;
        margin-left: auto;
        text-align: right;

        .card-actions {
          flex-direction: row-reverse;
        }
      }

      &.container-absolute{
        right: 0;
      }
    }
  }

  &.card-shadow {
    &::after{
      z-index: 0;
    }
  }

  &.card-absolute-shadow{
    .container-absolute{
      box-shadow: var(--card-panel-shadow, $card-panel-shadow);
      height: calc(100% + $card-panel-shadow-corner);
      width: calc(var(--card-panel-container-width, $card-panel-container-width) + var(--card-panel-shadow-corner, $card-panel-shadow-corner));

      &:first-child{
        left: calc(var(--card-panel-shadow-corner, $card-panel-shadow-corner) * -1);
      }

      &:last-child{
        right: calc(var(--card-panel-shadow-corner, $card-panel-shadow-corner) * -1);
      }
    }
  }
}






$pricing-card-shadow-color: red !default;
$pricing-card-elevated-shadow:
        0 11px 15px -7px rgba($pricing-card-shadow-color, 0.2),
        0 24px 38px 3px rgba($pricing-card-shadow-color, 0.14),
        0 9px 46px 8px rgba($pricing-card-shadow-color, 0.12) !default;

.hyperplexed-card{
  // @extend %simple-card;

  --hyperplexed-card-primary: #ff6f00;
  --hyperplexed-card-secondary: #ffeb3b;
  --hyperplexed-card-background: #FFF;
  --hyperplexed-card-text: #3c3c3c;
  --hyperplexed-card-height: 400px;
  --hyperplexed-card-width: 500px;


  margin: 0 auto;
  height: var(--hyperplexed-card-height);
  pointer-events: initial;
  width: 100%;
  max-width: var(--hyperplexed-card-width);
  color: var(--hyperplexed-card-text);

  .card-image,
  .card-content {
    position: relative;
    height: 100%;
    display: inline-block;
    background-color: var(--hyperplexed-card-background);
    vertical-align: top;
    width: 50%;
  }

  .card-image{
    background-image: linear-gradient(45deg, var(--hyperplexed-card-secondary), var(--hyperplexed-card-primary));
    box-shadow: var(--pricing-card-elevated-shadow, $pricing-card-elevated-shadow);
    z-index: 1;

     & > *{
      position: absolute;
      top: 50%;
      left: -10%;
      transform: translateY(-50%);
      z-index: 2;
      min-width: 80%;
      box-shadow: var(--pricing-card-elevated-shadow, $pricing-card-elevated-shadow);
      border-radius: 50%;
    }
  }

  .card-content{
    z-index: 2;
    overflow: hidden;
    height: calc(100% + 48px);
    margin-top: -24px;
    box-shadow: var(--pricing-card-elevated-shadow, $pricing-card-elevated-shadow);
  }
}

$resume-card-color: $primary-color;

$resume-card-color: #000 !default;
$resume-card-padding: 24px !default;
$resume-card-border: 4px !default;

.resume-list-card{
  @extend %simple-card;

  flex-direction: row;
  align-items: center;
  gap: calc(var(--resume-card-padding, $resume-card-padding) * 2);
  padding: calc(var(--resume-card-padding, $resume-card-padding) * 2) 0;
  box-shadow: none;


  .card-header {
    white-space: nowrap;
    justify-content: center;
    font-size: 1.2em;
  }

  .card-content{
    position: relative;

    &::after{
      content: "";
      position: absolute;
      bottom: 0;
      left: 50%;
      transform: translateX(-50%);
      width: calc(100% - var(--resume-card-padding, $resume-card-padding) * 2);
      height: calc(var(--resume-card-border, $resume-card-border) * 0.5);
      background-color: $resume-card-color;
    }
  }

  .card-title{
    display: flex;
    align-items: center;
    justify-content: center;

    small{
      border-left: var(--resume-card-border, $resume-card-border) solid $resume-card-color;
      margin-left: var(--resume-card-padding, $resume-card-padding);
      padding-left: var(--resume-card-padding, $resume-card-padding);
      font-size: 0.5em;
    }
  }

  &.list-mode {
    padding: calc(var(--resume-card-padding, $resume-card-padding) * 3) 0;

    .card-content {
      position: relative;

      &::after {
        content: none;
      }
    }

    & + .resume-list-card{
      &::after{
        content: "";
        position: absolute;
        top: 0;
        left: 50%;
        transform: translateX(-50%);
        width: 50%;
        height: 4px;
        background-color: rgba($primary-color, 0.25);
      }
    }
  }
}


$chess-panel: 400px !default;
$chess-panel-button-color: $primary-color;

$chess-panel-button-color: transparent !default;

.chess-panel{
  display: flex;
  flex-wrap: wrap;

  --simple-button-color: var(--chess-panel-button-color, #{$chess-panel-button-color});

  & > * {
    width: 50%;
    height: $chess-panel;
    display: flex;
    align-items: center;
    justify-content: center;
    flex-shrink: 0;
    overflow: hidden;
  }

  & > img {
    object-fit: cover;
  }

  &.four-per-row{
    & > * {
      width: 25%;
    }
  }
}


///**
// * Possible themification
// */
//$g-theme: (
//        // same as "light"
//        "default": (
//                "body-background-color": #fff,
//                "body-text-color": #000,
//                "anchor-text-color": $primary-color-600,
//                "anchor-text-active-color": $secondary-color-600,
//        ),
//        "dark": (
//                "body-background-color": $grey-500,
//                "body-text-color": #fff,
//        ),
//);
//
//@each $theme-name, $attribute-colors in $g-theme {
//        // if default root:
//        @if list.index($theme-name, "default") {
//                :root {
//                        // for each attribute
//                        @each $attribute, $color in $attribute-colors {
//                                --#{$attribute}: #{$color};
//                        }
//                }
//        } @else {
//                @media (prefers-color-scheme: #{$theme-name}) {
//                        :root {
//                                // for each attribute
//                                @each $attribute, $color in $attribute-colors {
//                                        --#{$attribute}: #{$color};
//                                }
//                        }
//                }
//        }
//}






















// TODO OLD: REDO (global function?)
// TODO creare una funzione che li genera in automatico (insieme al .gradient-shadow), si tratta di fare gruppi di 2 colori e di usare il 2° come ombra.
// TODO e di mettere qualche altro deg
// https://stackoverflow.com/questions/17482726/sass-variables-and-gradient

// usage: guebbit.color-get("name_of_color", "type_of_color")
// helper to avoid repeating map-get($materialize_colors, ...)
@function guebbit-color-get($color, $type) {
  @if map-has-key($colors-collection, $color) {
    $curr-color: map-get($colors-collection, $color);

    @if map-has-key($curr-color, $type) {
      @return map-get($curr-color, $type);
    }
  }
  // @warn "Unknown `#{$color}` - `#{$type}` in $colors-collection.";
  @return "#fff";
}

// "gradient-45": (
//  "light-blue-teal": (linear-gradient(45deg, guebbit-color-get("light-blue", "lighten-4") 0%, guebbit-color-get("teal", "accent-2") 100%)),
//  "indigo-light-blue-2": (linear-gradient(45deg, guebbit-color-get("indigo", "lighten-4") 0%, guebbit-color-get("light-blue", "lighten-4") 100%)),
//  "light-blue-indigo": (linear-gradient(45deg, guebbit-color-get("light-blue", "lighten-4") 0%, guebbit-color-get("indigo", "lighten-3") 100%)),
//  "yellow-green": (linear-gradient(45deg, guebbit-color-get("yellow", "accent-1") 0%, guebbit-color-get("green", "accent-1") 100%)),
//  "orange-deep-orange": (linear-gradient(45deg, guebbit-color-get("orange", "lighten-4") 0%, guebbit-color-get("deep-orange", "lighten-4") 100%)),
//  "deep-purple-purple": (linear-gradient(45deg, guebbit-color-get("deep-purple", "lighten-4") 0%, guebbit-color-get("purple", "lighten-5") 100%)),
//  "red-pink": (linear-gradient(45deg, guebbit-color-get("red", "accent-2") 0%, guebbit-color-get("pink", "lighten-3") 100%)),
//  "green-amber": (linear-gradient(45deg, guebbit-color-get("light-green", "lighten-3") 0%, guebbit-color-get("amber", "lighten-5") 100%)),
//  "amber-amber": (linear-gradient(45deg, guebbit-color-get("amber", "darken-4") 0%, guebbit-color-get("amber", "lighten-1") 100%)),
//  "purple-pink": (linear-gradient(45deg, guebbit-color-get("purple", "accent-1") 0%, guebbit-color-get("pink", "lighten-5") 100%)),
//  "indigo-light-blue": (linear-gradient(45deg, guebbit-color-get("indigo", "darken-1") 0%, guebbit-color-get("light-blue", "lighten-2") 100%)),
//  "teal-cyan": (linear-gradient(45deg, guebbit-color-get("teal", "lighten-5") 0%, guebbit-color-get("cyan", "accent-3") 100%)),
//  "blue-grey-blue-grey": (linear-gradient(45deg, guebbit-color-get("blue-grey", "lighten-4") 0%, guebbit-color-get("blue-grey", "darken-1") 100%)),
//  "cyan-light-green-2": (linear-gradient(45deg, guebbit-color-get("cyan", "darken-2") 0%, guebbit-color-get("light-green", "accent-2") 100%)),
//  "orange-amber": (linear-gradient(45deg, guebbit-color-get("orange", "darken-4") 0%, guebbit-color-get("amber", "darken-2") 100%)),
//  "indigo-blue": (linear-gradient(45deg, guebbit-color-get("indigo", "darken-2") 0%, guebbit-color-get("blue", "darken-2") 100%)),
//  "brown-brown": (linear-gradient(45deg, guebbit-color-get("brown", "darken-1") 0%, guebbit-color-get("brown", "lighten-4") 100%)),
//  "blue-grey-blue": (linear-gradient(45deg, guebbit-color-get("blue-grey", "darken-4") 0%, guebbit-color-get("blue", "accent-3") 100%)),
//  "purple-deep-orange": (linear-gradient(45deg, guebbit-color-get("purple", "darken-1") 0%, guebbit-color-get("deep-orange", "accent-2") 100%)),
//  "green-teal": (linear-gradient(45deg, guebbit-color-get("green", "darken-1") 0%, guebbit-color-get("teal", "accent-3") 100%)),
//  "purple-light-blue": (linear-gradient(45deg, guebbit-color-get("purple", "accent-2") 0%, guebbit-color-get("light-blue", "lighten-2") 100%)),
//  "cyan-cyan": (linear-gradient(45deg, guebbit-color-get("cyan", "accent-2") 0%, guebbit-color-get("cyan", "accent-3") 100%)),
//  "yellow-teal": (linear-gradient(45deg, guebbit-color-get("yellow", "lighten-4") 0%, guebbit-color-get("teal", "accent-2") 100%)),
//  "purple-deep-purple": (linear-gradient(45deg, guebbit-color-get("purple", "darken-2") 0%, guebbit-color-get("deep-purple", "accent-2") 100%)),
//  "cyan-light-green": (linear-gradient(45deg, guebbit-color-get("cyan", "accent-3") 0%, guebbit-color-get("light-green", "accent-1") 100%)),
//  "purple-amber": (linear-gradient(45deg, guebbit-color-get("purple", "accent-3") 0%, guebbit-color-get("amber", "darken-2") 100%)),
//  "indigo-purple": (linear-gradient(45deg, guebbit-color-get("indigo", "darken-2") 0%, guebbit-color-get("purple", "darken-2") 100%)),
//  "deep-purple-blue": (linear-gradient(45deg, guebbit-color-get("deep-purple", "accent-4") 0%, guebbit-color-get("blue", "darken-2") 100%)),
//  "deep-orange-orange": (linear-gradient(45deg, guebbit-color-get("deep-orange", "darken-4") 0%, guebbit-color-get("orange", "darken-2") 100%)),
//  "light-blue-cyan": (linear-gradient(45deg, guebbit-color-get("light-blue", "darken-2") 0%, guebbit-color-get("cyan", "lighten-1") 100%)),
//  "blue-indigo": (linear-gradient(45deg, guebbit-color-get("blue", "accent-4") 0%, guebbit-color-get("indigo", "darken-1") 100%)),
//  "semi-dark": (linear-gradient(-90deg, #00aeff 0%, #3369e6 100%))
// )