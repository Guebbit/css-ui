@use "sass:list";
@import "../functions/strings";

$guebbit-colors-collection: () !default;

/**
  Create all the needed classes for the requested colors
  $branch-list: when filled: need to exclude all except the brands in the list (aka: include only listed brands)
  $feature-list: additional classes, may become cumbersome and many are not needed. Use with care.
    - color
    - background
    - border
    - pseudo (bg only, color very rarely used)
    - hover
  $prefix: prefix that applies to classes
 */
@mixin guebbit-include-colors($branch-list: (), $feature-list: ("color", "background"), $prefix: "") {
  // for every branch
  @each $branch-name, $branch in $guebbit-colors-collection {
    // check that there is no $branch-list or, if present, it's correctly whitelisted
    @if list.length($branch-list) < 1 or list.index($branch-list, $branch-name) {

      // for every leaf
      @each $sname, $scolor in $branch {

        // fallback fix
        $fallback: false;
        @if guebbit-string-ends-with($sname, "-fallback") {
          $fallback: true;
          $sname: list.nth(guebbit-split($sname, "-"), 1);
        }

        @if list.index($feature-list, "color"){
          .#{$prefix}#{$branch-name}-#{$sname}-color {
            color: $scolor !important;
          }
        }

        @if list.index($feature-list, "background") and not $fallback{
          .#{$prefix}#{$branch-name}-#{$sname}-bg {
            background: $scolor !important;
          }
        }

        @if list.index($feature-list, "border"){
          .#{$prefix}#{$branch-name}-#{$sname}-border {
            border-color: $scolor !important;
          }
        }

        @if list.index($feature-list, "pseudo") and not $fallback{
          .#{$prefix}#{$branch-name}-#{$sname}-pseudo-bg {
            &::after,
            &::before {
              background: $scolor !important;
            }
          }
        }

        @if list.index($feature-list, "hover"){

          @if list.index($feature-list, "color"){
            .#{$prefix}#{$branch-name}-#{$sname}-hover-color {
              &:hover {
                color: $scolor !important;
              }
            }
          }

          @if list.index($feature-list, "background") and not $fallback{
            .#{$prefix}#{$branch-name}-#{$sname}-hover-bg {
              &:hover {
                background: $scolor !important;
              }
            }
          }

          @if list.index($feature-list, "border"){
            .#{$prefix}#{$branch-name}-#{$sname}-hover-border {
              &:hover {
                border-color: $scolor !important;
              }
            }
          }
          @if list.index($feature-list, "pseudo") and not $fallback{
            .#{$prefix}#{$branch-name}-#{$sname}-hover-pseudo-bg {
              &:hover{
                &::after,
                &::before {
                  background: $scolor !important;
                }
              }
            }
          }
        }
      }

      // CSS VARS
      :root{
        @each $sname, $scolor in $branch {
          --#{$prefix}#{$branch-name}-#{$sname}: #{$scolor};
        }
      }
    }
  }
}