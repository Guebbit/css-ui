@use "@guebbit/css-toolkit" as guebbit;
@use "../../utils" as utils;

$css-ui-class-prefix: "" !default;
$css-ui-var-prefix: "" !default;
$css-ui-root-prefix: "--" !default;
$css-ui-dark-theme-class: "theme--dark" !default;
$css-ui-component-name: "simple-panel" !default;

$overlay: #000 !default;
$on-overlay: guebbit.color-contrast($overlay) !default;
$overlay--dark: #000 !default;
$on-overlay--dark: guebbit.color-contrast($overlay--dark) !default;
$duration: 0.3s !default;
$overlay-opacity: 0.75 !default;

%#{$css-ui-class-prefix}#{$css-ui-component-name},
.#{$css-ui-class-prefix}#{$css-ui-component-name} {
  @include utils.var-builder((
                  (overlay, guebbit.extract-colors($overlay), '', false),
                  (on-overlay, guebbit.extract-colors($on-overlay), '', true),

                  (duration, $duration),
                  (overlay-opacity, $overlay-opacity),
  ), $css-ui-var-prefix, $css-ui-component-name, $css-ui-root-prefix);

  --#{$css-ui-var-prefix}background-image: none;
  --#{$css-ui-var-prefix}aspect-ratio: 0;

  position: relative;
  z-index: 1;
  display: flex;
  color: var(--#{$css-ui-var-prefix}on-overlay);

  .panel-content {
    position: relative;
    z-index: 1;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }

  .panel-background {
    position: absolute;
    width: 100%;
    height: 100%;
    z-index: -1;
    overflow: hidden;
    padding-bottom: var(--aspect-ratio);
    transition:
            transform var(--#{$css-ui-var-prefix}duration),
            background-image var(--#{$css-ui-var-prefix}duration),
            opacity var(--#{$css-ui-var-prefix}duration);
    background-image: var(--#{$css-ui-var-prefix}background-image);
    background-repeat: no-repeat;
    background-position: center;
    background-attachment: scroll;
    background-size: cover;

    iframe {
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      width: 100%;
      height: 100%;
    }
  }

  video.panel-background,
  img.panel-background{
    object-fit: cover;
  }

  // Add shadow (OPTIONAL ELEMENT)
  &.panel-overlay::after,
  .panel-overlay {
    content: "";
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
    z-index: 0;
    opacity: var(--#{$css-ui-var-prefix}overlay-opacity);
    background: rgba(var(--#{$css-ui-var-prefix}overlay));
  }

  &.shadow-text-mode{
    .panel-content {
      text-shadow: 2px 2px 4px rgba(var(--#{$css-ui-var-prefix}overlay));
    }
  }

  // centered
  &.centered-mode{
    align-items: center;
    justify-content: center;

    .panel-content {
      display: flex;
      align-items: center;
      justify-content: center;
    }
  }

  // bottom
  &.bottom-mode {
    align-items: flex-end;

    .panel-content {
      display: flex;
      align-items: flex-end;
    }
  }

  // content set the size of panel
  &.content-size-mode{
    .panel-content{
      position: absolute;
      top: 0;
    }

    .panel-background{
      position: relative;
      top: 0;
      left: 0;
      transform: none;
    }

    iframe{
      position: absolute;
      width: 100%;
      height: 100%;
    }
  }
}


/**
 * Dark Theme (changes from default variables)
 */
@mixin theme-dark-builder{
  %#{$css-ui-class-prefix}#{$css-ui-component-name},
  .#{$css-ui-class-prefix}#{$css-ui-component-name} {
    @include utils.var-builder((
                    (overlay, guebbit.extract-colors($overlay--dark), '', false),
                    (on-overlay, guebbit.extract-colors($on-overlay--dark), '', true),
    ), $css-ui-var-prefix, $css-ui-component-name, $css-ui-root-prefix);
  }
}

/**
 * By class
 */
.#{$css-ui-dark-theme-class}{
  @include theme-dark-builder;
}

/**
 * By browser
 */
@media (prefers-color-scheme: dark) {
  @include theme-dark-builder;
}