@use "@guebbit/css-toolkit" as guebbit;
@use "../../utils" as utils;

$css-ui-class-prefix: "" !default;
$css-ui-var-prefix: "" !default;
$css-ui-root-prefix: "--" !default;
$css-ui-dark-theme-class: "theme--dark" !default;
$css-ui-component-name: "svg-title" !default;

// Main $variables
$color: null !default;
$color--light: guebbit.no-null-var(($color, inherit)) !default;
$color--dark: guebbit.no-null-var(($color, inherit)) !default;
$background: null !default;
$background--light: guebbit.no-null-var(($background, #fff)) !default;
$background--dark: guebbit.no-null-var(($background, #2B2A33)) !default;

$on-color: guebbit.color-contrast($color--light) !default;
$on-color--dark: guebbit.color-contrast($color--dark) !default;
$shadow-color: #000 !default;
$shadow-color--dark: #000 !default;

// generic
$line-height: 0.2em !default;

%#{$css-ui-class-prefix}#{$css-ui-component-name},
.#{$css-ui-class-prefix}#{$css-ui-component-name} {
  @include utils.var-builder((
                  (color, $color--light, color),
                  (on-color, $on-color, on-color),
                  (background, $background--light, global-background),

                  (line-height, $line-height),
  ), $css-ui-var-prefix, $css-ui-component-name, $css-ui-root-prefix);

  --#{$css-ui-var-prefix}shadow-color: var(--#{$css-ui-var-prefix}#{$css-ui-component-name}-shadow-color, var(--#{$css-ui-var-prefix}#{$css-ui-root-prefix}shadow-color, #{guebbit.extract-colors($shadow-color)}));
  --#{$css-ui-var-prefix}image: var(--#{$css-ui-var-prefix}#{$css-ui-component-name}-image, "");


  line-height: 1.1;
  text-align: center;
  position: relative;
  text-decoration: none;
  text-shadow:
          0 2px 4px rgba(var(--#{$css-ui-var-prefix}shadow-color) / var(--#{$css-ui-var-prefix}#{$css-ui-root-prefix}shadow-box-1, .2)),
          0 4px 5px rgba(var(--#{$css-ui-var-prefix}shadow-color) / var(--#{$css-ui-var-prefix}#{$css-ui-root-prefix}shadow-box-2, .14)),
          0 1px 10px rgba(var(--#{$css-ui-var-prefix}shadow-color) / var(--#{$css-ui-var-prefix}#{$css-ui-root-prefix}shadow-box-3, .12));
  color: var(--#{$css-ui-var-prefix}on-color);
  z-index: 1;

  .svg-title-icon{
    position: absolute;
    left: 50%;
    top: 50%;
    transform: translate(-50%, -50%);
    z-index: -1;
    color: var(--#{$css-ui-var-prefix}color);
    background-color: var(--#{$css-ui-var-prefix}background);
    fill: currentcolor;
    stroke: currentcolor;
    height: 1em;
    width: 1em;
  }

  &.svg-title-line{
    &::before {
      content: "";
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      z-index: -2;
      background-color: var(--#{$css-ui-var-prefix}color);
      height: var(--#{$css-ui-var-prefix}line-height);
      width: 100%;
    }
  }

  &.svg-title-custom-bg{
    &::after {
      content:"";
      position: absolute;
      left: 50%;
      top: 50%;
      transform: translate(-50%, -50%);
      z-index: -1;
      width: 100%;
      height: 100%;
      background: var(--#{$css-ui-var-prefix}background) no-repeat var(--#{$css-ui-var-prefix}image);
      background-position: 50% 50%;
    }
  }
}

/**
 * Dark Theme (changes from default variables)
 */
@mixin theme-dark-builder{
  %#{$css-ui-class-prefix}#{$css-ui-component-name},
  .#{$css-ui-class-prefix}#{$css-ui-component-name} {
    @include utils.var-builder((
                    (color, $color--dark, color),
                    (on-color, $on-color--dark, on-color),
                    (background, $background--dark, global-background),

                    (line-height, $line-height),
    ), $css-ui-var-prefix, $css-ui-component-name, $css-ui-root-prefix);
  }
}

/**
 * By class
 */
.#{$css-ui-dark-theme-class}{
  @include theme-dark-builder;
}

/**
 * By browser
 */
@media (prefers-color-scheme: dark) {
  @include theme-dark-builder;
}
