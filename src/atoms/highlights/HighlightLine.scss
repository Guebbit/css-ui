@use "@guebbit/css-toolkit" as guebbit;
@use "../../utils" as utils;

$css-ui-class-prefix: "" !default;
$css-ui-var-prefix: "" !default;
$css-ui-root-prefix: "--" !default;
$css-ui-dark-theme-class: "theme--dark" !default;
$css-ui-component-name: "highlight-line" !default;

// Main $variables
$color: null !default;
$color--light: guebbit.no-null-var(($color, rgba(0 0 0 / .7))) !default;
$color--dark: guebbit.no-null-var(($color, rgba(255 255 255 / .7))) !default;
$active-color: null !default;
$active-color--light: guebbit.no-null-var(($active-color, $color--light)) !default;
$active-color--dark: guebbit.no-null-var(($active-color, $color--dark)) !default;

$size: 0.2em !default;
$active-size: $size !default;
$length: 0 !default;
$active-length: 100% !default;
$distance: -0.5em !default;
$duration: 0.3s !default;

%#{$css-ui-class-prefix}#{$css-ui-component-name},
.#{$css-ui-class-prefix}#{$css-ui-component-name} {
  @include utils.var-builder((
                  (color, $color--light, color),
                  (active-color, $active-color--light, active-color),

                  (size, $size),
                  (active-size, $active-size),
                  (length, $length),
                  (active-length, $active-length),
                  (distance, $distance),
                  (duration, $duration),
  ), $css-ui-var-prefix, $css-ui-component-name, $css-ui-root-prefix);

  position: relative;
  z-index: 1;

  &::after {
    content: "";
    position: absolute;
    z-index: -1;
    height: 0;
    width: 0;
    background-color: var(--#{$css-ui-var-prefix}color);
    transition:
            background-color var(--#{$css-ui-var-prefix}duration),
            transform var(--#{$css-ui-var-prefix}duration),
            width var(--#{$css-ui-var-prefix}duration),
            height var(--#{$css-ui-var-prefix}duration),
            all var(--#{$css-ui-var-prefix}duration);
  }

  &.full-highlight{
    &::after{
      height: 100%;
      top: 0;
      left: 50%;
      transform: translateX(-50%);
    }
  }

  &.left-highlight,
  &.right-highlight{
    &::after {
      top: 50%;
      transform: translateY(-50%);
      height: var(--#{$css-ui-var-prefix}length);
      width: var(--#{$css-ui-var-prefix}size);
    }
  }

  &.left-highlight {
    &::after {
      left: var(--#{$css-ui-var-prefix}distance);
    }
  }

  &.right-highlight {
    &::after {
      right: var(--#{$css-ui-var-prefix}distance);
    }
  }

  &.top-highlight,
  &.middle-highlight,
  &.bottom-highlight {
    &::after {
      left: 50%;
      transform: translateX(-50%);
      width: var(--#{$css-ui-var-prefix}length);
      height: var(--#{$css-ui-var-prefix}size);
    }
  }

  &.top-highlight {
    &::after {
      top: var(--#{$css-ui-var-prefix}distance);
    }
  }

  &.bottom-highlight {
    &::after {
      bottom: var(--#{$css-ui-var-prefix}distance);
      top: auto;
    }
  }
  
  &.middle-highlight {
    &::after {
      top: 50%;
      left: 50%;
      transform: translate(-50%, -50%);
    }
  }

  &.from-start-highlight,
  &.from-afar-highlight {
    &.top-highlight {
      &::after {
        top: var(--#{$css-ui-var-prefix}distance) !important;
      }
    }

    &.middle-highlight{
      &::after {
        top: 50%;
      }
    }
  }

  &.from-start-highlight {
    &.left-highlight,
    &.right-highlight {
      &::after {
        top: 0;
        transform: none !important;
      }
    }

    &.top-highlight,
    &.middle-highlight,
    &.bottom-highlight {
      &::after {
        left: 0;
        transform: none !important;
      }
    }

    &.bottom-highlight {
      &::after {
        top: auto;
      }
    }
  }

  &.from-afar-highlight {
    &.left-highlight,
    &.right-highlight {
      &::after {
        top: 200%;
      }
    }

    &.top-highlight,
    &.middle-highlight,
    &.bottom-highlight {
      &::after {
        left: 200%;
      }
    }

    &.top-highlight,
    &.bottom-highlight {
      &::after {
        top: auto;
      }
    }

    &.from-start-highlight{
      &.left-highlight,
      &.right-highlight {
        &::after {
          top: -200%;
        }
      }

      &.top-highlight,
      &.middle-highlight,
      &.bottom-highlight {
        &::after {
          left: -200%;
        }
      }

      &.top-highlight,
      &.bottom-highlight {
        &::after {
          top: auto;
        }
      }

      &.middle-highlight {
        &::after {
          top: 50%;
        }
      }
    }
  }

  &.highlight-line-active,
  &.highlight-line-on-active.active,
  &.highlight-line-on-hover:hover {
    &::after {
      background-color: var(--#{$css-ui-var-prefix}active-color);
    }

    &.full-highlight{
      &::after{
        height: 100%;
        width: 120%;
      }
    }

    &.left-highlight,
    &.right-highlight{
      &::after {
        height: var(--#{$css-ui-var-prefix}active-length);
        width: var(--#{$css-ui-var-prefix}active-size);
      }
    }

    &.top-highlight,
    &.middle-highlight,
    &.bottom-highlight {
      &::after {
        width: var(--#{$css-ui-var-prefix}active-length);
        height: var(--#{$css-ui-var-prefix}active-size);
      }
    }

    &.top-highlight,
    &.bottom-highlight {
      &::after {
        transform: translateX(-50%);
      }
    }

    &.from-afar-highlight {
      &.left-highlight,
      &.right-highlight {
        &::after {
          top: 50%;
          transform: translateY(-50%);
        }
      }

      &.top-highlight,
      &.middle-highlight,
      &.bottom-highlight {
        &::after {
          left: 0;
          transform: translateY(-50%);
        }
      }

      &.top-highlight,
      &.bottom-highlight {
        &::after {
          top: auto;
        }
      }

      &.from-start-highlight{
        &.left-highlight,
        &.right-highlight {
          &::after {
            transform: translateY(-50%) !important;
          }
        }
      }
    }
  }
}

/**
 * Dark Theme (changes from default variables)
 */
@mixin theme-dark-builder{
  %#{$css-ui-class-prefix}#{$css-ui-component-name},
  .#{$css-ui-class-prefix}#{$css-ui-component-name} {
    %#{$css-ui-class-prefix}#{$css-ui-component-name},
    .#{$css-ui-class-prefix}#{$css-ui-component-name} {
      @include utils.var-builder((
                      (color, $color--dark, color),
                      (active-color, $active-color--dark, active-color),
      ), $css-ui-var-prefix, $css-ui-component-name, $css-ui-root-prefix);
    }
  }
}

/**
 * By class
 */
.#{$css-ui-dark-theme-class}{
  @include theme-dark-builder;
}

/**
 * By browser
 */
@media (prefers-color-scheme: dark) {
  @include theme-dark-builder;
}
