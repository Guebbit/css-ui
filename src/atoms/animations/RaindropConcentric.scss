@use "sass:math";
@use "@guebbit/css-toolkit" as guebbit;
@use "../../utils" as utils;

$css-ui-class-prefix: "" !default;
$css-ui-var-prefix: "" !default;
$css-ui-root-prefix: "--" !default;
$css-ui-dark-theme-class: "theme--dark" !default;
$css-ui-component-name: "raindrop-concentric" !default;

// neutral
$color: null !default;
$color--light: guebbit.no-null-var(($color, #000)) !default;
$color--dark: guebbit.no-null-var(($color, #fff)) !default;
$active-color: null !default;
$active-color--light: guebbit.no-null-var(($active-color, $color--light)) !default;
$active-color--dark: guebbit.no-null-var(($active-color, $color--dark)) !default;

// generic
$size: 150px !default;
$border-size: 10px !default;
$duration: 15s !default;
$number: 4 !default;

%#{$css-ui-class-prefix}#{$css-ui-component-name},
.#{$css-ui-class-prefix}#{$css-ui-component-name}{
  @include utils.var-builder((
                  (color, guebbit.extract-colors($color--light), color),
                  (active-color, guebbit.extract-colors($active-color--light), active-color),

                  (size, $size),
                  (border-size, $border-size),
  ), $css-ui-var-prefix, $css-ui-component-name, $css-ui-root-prefix);

  position: absolute;
  transform: translate(-50%, -50%);
  font-size: var(--#{$css-ui-var-prefix}size);

  & > * {
    position: absolute;
    top: -0.5em;
    left: -0.5em;
    width: 1em;
    height: 1em;
    border: var(--#{$css-ui-var-prefix}border-size) solid var(--#{$css-ui-var-prefix}color);
    border-radius: 50%;
    transform: scale(0);
    animation-iteration-count: infinite;

    @for $i from 1 through $number {
      &:nth-child(#{$i}){
        animation-duration: $duration * math.div($i, $number);
      }
    }
  }

  &.animate-once,
  &.animate-active{
    & > * {
      animation-name: #{$css-ui-class-prefix}#{$css-ui-component-name}-animation;
    }
  }

  &.animate-once{
    & > *  {
      animation-iteration-count: 1;
    }
  }

  @keyframes #{$css-ui-class-prefix}#{$css-ui-component-name}-animation {
    80% {
      opacity: 1;
    }

    100% {
      opacity: 0;
      transform: scale(5);
      border-color: var(--#{$css-ui-var-prefix}active-color);
    }
  }
}

/**
 * Dark Theme (changes from default variables)
 */
@mixin theme-dark-builder{
  %#{$css-ui-class-prefix}#{$css-ui-component-name},
  .#{$css-ui-class-prefix}#{$css-ui-component-name} {
    @include utils.var-builder((
                    (color, guebbit.extract-colors($color--dark), color),
                    (active-color, guebbit.extract-colors($active-color--dark), active-color),
    ), $css-ui-var-prefix, $css-ui-component-name, $css-ui-root-prefix);
  }
}

/**
 * By class
 */
.#{$css-ui-dark-theme-class}{
  @include theme-dark-builder;
}

/**
 * By browser
 */
@media (prefers-color-scheme: dark) {
  @include theme-dark-builder;
}
