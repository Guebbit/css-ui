@use "sass:math";
@use "@guebbit/css-toolkit" as guebbit;
@use "../../utils" as utils;

$css-ui-class-prefix: "" !default;
$css-ui-var-prefix: "" !default;
$css-ui-root-prefix: "--" !default;
$css-ui-dark-theme-class: "theme--dark" !default;
$css-ui-component-name: "icon-showcase-load" !default;

// Main $variables
$color: null !default;
$color--light: guebbit.no-null-var(($color, #000)) !default;
$color--dark: guebbit.no-null-var(($color, #fff)) !default;

// LIGHT Theme
$color--light: guebbit.no-null-var(($color, #000)) !default;
$background: guebbit.color-contrast($color--light) !default;
$progress: guebbit.color-contrast($color--light) !default;

// DARK Theme
$color--dark: guebbit.no-null-var(($color, #fff)) !default;
$background--dark: guebbit.color-contrast($color--dark) !default;
$progress--dark: guebbit.color-contrast($color--dark) !default;

// generic
$size: 4em !default;
$duration: 4s !default;
$item-number: 3 !default;

%#{$css-ui-class-prefix}#{$css-ui-component-name},
.#{$css-ui-class-prefix}#{$css-ui-component-name}{
  @include utils.var-builder((
                  (color, guebbit.extract-colors($color--light), color),
                  (progress, guebbit.extract-colors($progress), on-color),
                  (background, guebbit.extract-colors($background), global-background),

                  (size, $size),
  ), $css-ui-var-prefix, $css-ui-component-name, $css-ui-root-prefix);


  font-size: var(--#{$css-ui-var-prefix}size);
  background-color: var(--#{$css-ui-var-prefix}background);
  position: relative;
  border-radius: 50%;
  width: 1em;
  height: 1em;
  padding: 0.1em;

  &::before {
    content: "";
    position: absolute;
    top: 0.1em;
    left: 0.1em;
    border: 0.1em solid var(--#{$css-ui-var-prefix}color);
    border-left-color: var(--#{$css-ui-var-prefix}progress);
    border-radius: 50%;
    width: 0.8em;
    height: 0.8em;
    animation: #{$css-ui-class-prefix}#{$css-ui-component-name}-animation-rotate 1s infinite linear;
  }

  & > * {
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    inset: 0;
    margin: auto;
    color: var(--#{$css-ui-var-prefix}color);
    font-size: 0.4em;
    width: 1em;
    height: 1em;
    border-radius: 50%;
    line-height: 1;
    transform: scale(0) translate3d(0, 0, 0);
    text-align: center;
    animation-name: #{$css-ui-class-prefix}#{$css-ui-component-name}-animation;
    animation-iteration-count: infinite;
    animation-timing-function: ease-in-out;
    animation-duration: $duration;
    
    @for $i from 1 through $item-number {
      &:nth-child(#{$i}){
        animation-delay: $duration * math.div(($i - 1), $item-number);
      }
    }
  }

  svg{
    fill: currentcolor;
    stroke: currentcolor;
  }
  
  @keyframes #{$css-ui-class-prefix}#{$css-ui-component-name}-animation {
    0% {  transform: scale(0) translate3d(0, 0, 0); }
    11% { transform: scale(1.2) translate3d(0, 0, 0); }
    22% { transform: scale(1) translate3d(0, 0, 0); }
    33% { transform: scale(0) translate3d(0, 0, 0); }
  }

  @keyframes #{$css-ui-class-prefix}#{$css-ui-component-name}-animation-rotate {
    to { transform: rotate(360deg); }
  }
}

/**
 * Dark Theme (changes from default variables)
 */
@mixin theme-dark-builder{
  %#{$css-ui-class-prefix}#{$css-ui-component-name},
  .#{$css-ui-class-prefix}#{$css-ui-component-name} {
    @include utils.var-builder((
                    (color, guebbit.extract-colors($color--dark), color),
                    (progress, guebbit.extract-colors($progress--dark), on-color),
                    (background, guebbit.extract-colors($background--dark), global-background),

                    (size, $size),
    ), $css-ui-var-prefix, $css-ui-component-name, $css-ui-root-prefix);
  }
}

/**
 * By class
 */
.#{$css-ui-dark-theme-class}{
  @include theme-dark-builder;
}

/**
 * By browser
 */
@media (prefers-color-scheme: dark) {
  @include theme-dark-builder;
}

