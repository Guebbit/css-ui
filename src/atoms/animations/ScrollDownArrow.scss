@use "@guebbit/css-toolkit" as guebbit;
@use "../../utils" as utils;

$css-ui-class-prefix: "" !default;
$css-ui-var-prefix: "" !default;
$css-ui-root-prefix: "--" !default;
$css-ui-dark-theme-class: "theme--dark" !default;
$css-ui-component-name: "scroll-down-arrow" !default;

// colors
$color: null !default;
$color--light: guebbit.no-null-var(($color, #000)) !default;
$color--dark: guebbit.no-null-var(($color, #fff)) !default;
$active-color: null !default;
$active-color--light: guebbit.no-null-var(($active-color, $color--light)) !default;
$active-color--dark: guebbit.no-null-var(($active-color, $color--dark)) !default;

$size: 2em !default;
$duration: 0.3s !default;
$animation-duration: 3s !default;
$active-animation-duration: $animation-duration * 0.5 !default;

%#{$css-ui-class-prefix}#{$css-ui-component-name},
.#{$css-ui-class-prefix}#{$css-ui-component-name}{
  @include utils.var-builder((
                  (color, guebbit.extract-colors($color--light), color),
                  (active-color, guebbit.extract-colors($active-color--light), active-color),

                  (size, $size),
                  (duration, $duration),
                  (animation-duration, $animation-duration),
                  (active-animation-duration, $active-animation-duration),
  ), $css-ui-var-prefix, $css-ui-component-name, $css-ui-root-prefix);

  position: relative;
  width: var(--#{$css-ui-var-prefix}size);
  height: var(--#{$css-ui-var-prefix}size);
  margin-top: $size;
  cursor: pointer;

  & > div{
    position: absolute;
    width: var(--#{$css-ui-var-prefix}size);
    height: 0.5em;
    opacity: 0;
    transform: scale3d(0.5, 0.5, 0.5);
    animation:
            #{$css-ui-class-prefix}#{$css-ui-component-name}-animation
            var(--#{$css-ui-var-prefix}animation-duration)
            ease-out infinite;

    &::before,
    &::after {
      content: ' ';
      position: absolute;
      top: 0;
      height: 100%;
      width: 51%;
      background-color: var(--#{$css-ui-var-prefix}color);
      transition: background-color var(--#{$css-ui-var-prefix}duration);
    }

    &::before {
      left: 0;
      transform: skew(0deg, 30deg);
    }

    &::after {
      right: 0;
      width: 50%;
      transform: skew(0deg, -30deg);
    }

    &:first-child {
      animation-delay: calc(var(--#{$css-ui-var-prefix}animation-duration) * 0.33);
    }

    &:nth-child(2) {
      animation-delay: calc(var(--#{$css-ui-var-prefix}animation-duration) * 0.66);
    }
  }

  .scroll-down-text {
    position: absolute;
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
    display: block;
    margin-top: calc(var(--#{$css-ui-var-prefix}size) * -0.8);
    color: var(--#{$css-ui-var-prefix}color);
    text-transform: uppercase;
    white-space: nowrap;
    opacity: .3;
    animation:
            #{$css-ui-class-prefix}#{$css-ui-component-name}-animation-text
            calc(var(--#{$css-ui-var-prefix}animation-duration) * 0.33)
            linear alternate infinite;
  }

  &.animate-active,
  &.animate-on-active.active,
  &.animate-on-hover:hover {
    & > div{
      animation-duration: var(--#{$css-ui-var-prefix}active-animation-duration);

      &:first-child {
        animation-delay: calc(var(--#{$css-ui-var-prefix}active-animation-duration) * 0.33);
      }

      &:nth-child(2) {
        animation-delay: calc(var(--#{$css-ui-var-prefix}active-animation-duration) * 0.66);
      }

      &::before,
      &::after {
        background-color: var(--#{$css-ui-var-prefix}active-color);
      }
    }

    .scroll-down-text {
      color: var(--#{$css-ui-var-prefix}active-color);
    }
  }

  @keyframes #{$css-ui-class-prefix}#{$css-ui-component-name}-animation {
    25% {
      opacity: 1;
    }

    33% {
      opacity: 1;
      transform: translateY(30px);
    }

    67% {
      opacity: 1;
      transform: translateY(40px);
    }

    100% {
      opacity: 0;
      transform: translateY(55px) scale3d(0.5, 0.5, 0.5);
    }
  }

  @keyframes #{$css-ui-class-prefix}#{$css-ui-component-name}-animation-text{
    to {
      opacity: 1;
    }
  }
}

/**
 * Dark Theme (changes from default variables)
 */
@mixin theme-dark-builder{
  %#{$css-ui-class-prefix}#{$css-ui-component-name},
  .#{$css-ui-class-prefix}#{$css-ui-component-name} {
    @include utils.var-builder((
                    (color, guebbit.extract-colors($color--dark), color),
                    (active-color, guebbit.extract-colors($active-color--dark), active-color),
    ), $css-ui-var-prefix, $css-ui-component-name, $css-ui-root-prefix);
  }
}

/**
 * By class
 */
.#{$css-ui-dark-theme-class}{
  @include theme-dark-builder;
}

/**
 * By browser
 */
@media (prefers-color-scheme: dark) {
  @include theme-dark-builder;
}