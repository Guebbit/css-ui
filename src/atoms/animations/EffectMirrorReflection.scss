@use "@guebbit/css-toolkit" as guebbit;
@use "../../utils" as utils;

$css-ui-class-prefix: "" !default;
$css-ui-var-prefix: "" !default;
$css-ui-root-prefix: "--" !default;
$css-ui-dark-theme-class: "theme--dark" !default;
$css-ui-component-name: "effect-mirror-reflection" !default;

// colors
$color: null !default;
$color--light: guebbit.no-null-var(($color, #000)) !default;
$color--dark: guebbit.no-null-var(($color, #fff)) !default;
$active-color: null !default;
$active-color--light: guebbit.no-null-var(($active-color, $color--light)) !default;
$active-color--dark: guebbit.no-null-var(($active-color, $color--dark)) !default;

// generic
$duration: 0.3s !default;
$opacity: 0.2 !default;
$rotation: 35deg !default;
$position-top: -70% !default;
$active-opacity: 0.2 !default;
$active-rotation: 10deg !default;  // 25deg if vertical
$active-position-top: -40% !default;

%#{$css-ui-class-prefix}#{$css-ui-component-name}active{
  top: var(--#{$css-ui-var-prefix}active-position-top);
  opacity: var(--#{$css-ui-var-prefix}active-opacity);
  transform: var(--#{$css-ui-var-prefix}active-rotation);
  background:
          linear-gradient(
                          to top,
                          transparent,
                          var(--#{$css-ui-var-prefix}active-color) 15%,
                          var(--#{$css-ui-var-prefix}active-color)
          );
}

%#{$css-ui-class-prefix}#{$css-ui-component-name},
.#{$css-ui-class-prefix}#{$css-ui-component-name}{
  @include utils.var-builder((
                  (color, guebbit.extract-colors($color--light), color),
                  (active-color, guebbit.extract-colors($active-color--light), active-color),

                  (duration, $duration),
                  (opacity, $opacity),
                  (rotation, $rotation),
                  (position-top, $position-top),
                  (active-opacity, $active-opacity),
                  (active-rotation, $active-rotation),
                  (active-position-top, $active-position-top),
  ), $css-ui-var-prefix, $css-ui-component-name, $css-ui-root-prefix);

  position: absolute;
  content: '';
  z-index: 99;
  width: 200%;
  height: 100%;
  top: var(--#{$css-ui-var-prefix}position-top);
  left: 0;
  opacity: var(--#{$css-ui-var-prefix}opacity);
  transform: var(--#{$css-ui-var-prefix}rotation);
  // WARNING: Gradient doesn't listen to "background" transition
  background:
          linear-gradient(
                          to top,
                          transparent,
                          var(--#{$css-ui-var-prefix}color) 15%,
                          var(--#{$css-ui-var-prefix}color)
          );
  transition:
          top var(--#{$css-ui-var-prefix}duration),
          opacity var(--#{$css-ui-var-prefix}duration),
          transform var(--#{$css-ui-var-prefix}duration),
          background var(--#{$css-ui-var-prefix}duration);

  &.animate-active,
  &.animate-on-active.active,
  &.animate-on-hover:hover {
    @extend %#{$css-ui-class-prefix}#{$css-ui-component-name}active;
  }
}

.#{$css-ui-class-prefix}#{$css-ui-component-name}-animate-active,
.#{$css-ui-class-prefix}#{$css-ui-component-name}-animate-on-active.active,
.#{$css-ui-class-prefix}#{$css-ui-component-name}-animate-on-hover:hover {
  .#{$css-ui-class-prefix}#{$css-ui-component-name} {
    @extend %#{$css-ui-class-prefix}#{$css-ui-component-name}active;
  }
}

/**
 * Dark Theme (changes from default variables)
 */
@mixin theme-dark-builder{
  %#{$css-ui-class-prefix}#{$css-ui-component-name},
  .#{$css-ui-class-prefix}#{$css-ui-component-name} {
    @include utils.var-builder((
                    (color, guebbit.extract-colors($color--dark), color),
                    (active-color, guebbit.extract-colors($active-color--dark), active-color),
    ), $css-ui-var-prefix, $css-ui-component-name, $css-ui-root-prefix);
  }
}

/**
 * By class
 */
.#{$css-ui-dark-theme-class}{
  @include theme-dark-builder;
}

/**
 * By browser
 */
@media (prefers-color-scheme: dark) {
  @include theme-dark-builder;
}
