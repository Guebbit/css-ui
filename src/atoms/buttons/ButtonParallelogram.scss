@use "@guebbit/css-toolkit" as guebbit;
@use "../../utils" as utils;

$css-ui-class-prefix: "" !default;
$css-ui-var-prefix: "" !default;
$css-ui-root-prefix: "--" !default;
$css-ui-dark-theme-class: "theme--dark" !default;
$css-ui-component-name: "button-parallelogram" !default;

// Main $variables
$color: null !default;
$color--light: guebbit.no-null-var(($color, #000)) !default;
$color--dark: guebbit.no-null-var(($color, #fff)) !default;
$active-color: null !default;
$active-color--dark: guebbit.no-null-var(($active-color, $color--dark)) !default;
$active-color--light: guebbit.no-null-var(($active-color, $color--light)) !default;

// LIGHT theme
$on-color: guebbit.color-contrast($color--light) !default;
$active-on-color: guebbit.color-contrast($active-color--light) !default;
$focus-color: $color--light !default;
$active-focus-color: $active-color--light !default;

// DARK heme
$on-color--dark: guebbit.color-contrast($color--dark) !default;
$active-on-color--dark: guebbit.color-contrast($active-color--dark) !default;
$focus-color--dark: $color--dark !default;
$active-focus-color--dark: $active-color--dark !default;

// generics
$tilt: 10deg !default;
$active-tilt: -10deg !default;
$duration: 0.3s !default;
$padding: 8px !default;

%#{$css-ui-class-prefix}#{$css-ui-component-name},
.#{$css-ui-class-prefix}#{$css-ui-component-name} {
    --#{$css-ui-var-prefix}color: var(--#{$css-ui-var-prefix}#{$css-ui-component-name}-color, rgba(var(--#{$css-ui-var-prefix}#{$css-ui-root-prefix}color, #{guebbit.extract-colors($color--light)})));
    --#{$css-ui-var-prefix}on-color: var(--#{$css-ui-var-prefix}#{$css-ui-component-name}-on-color, rgba(var(--#{$css-ui-var-prefix}#{$css-ui-root-prefix}on-color, #{guebbit.extract-colors($on-color)})));
    --#{$css-ui-var-prefix}active-color: var(--#{$css-ui-var-prefix}#{$css-ui-component-name}-active-color, rgba(var(--#{$css-ui-var-prefix}#{$css-ui-root-prefix}active-color, #{guebbit.extract-colors($active-color--light)})));
    --#{$css-ui-var-prefix}active-on-color: var(--#{$css-ui-var-prefix}#{$css-ui-component-name}-active-on-color, rgba(var(--#{$css-ui-var-prefix}#{$css-ui-root-prefix}active-on-color, #{guebbit.extract-colors($active-on-color)})));
    --#{$css-ui-var-prefix}focus-color: var(--#{$css-ui-var-prefix}#{$css-ui-component-name}-focus-color, rgba(var(--#{$css-ui-var-prefix}#{$css-ui-root-prefix}color, #{guebbit.extract-colors($focus-color)})));
    --#{$css-ui-var-prefix}active-focus-color: var(--#{$css-ui-var-prefix}#{$css-ui-component-name}-active-focus-color, rgba(var(--#{$css-ui-var-prefix}#{$css-ui-root-prefix}active-color, #{guebbit.extract-colors($active-focus-color)})));

    @include utils.var-builder((
                    (color, $color--light, color),
                    (on-color, $on-color, on-color),
                    (focus-color, $focus-color, color),
                    (active-color, $active-color--light, active-color),
                    (active-on-color, $active-on-color, active-on-color),
                    (active-focus-color, $active-focus-color, active-color),

                    (tilt, $tilt),
                    (active-tilt, $active-tilt),
                    (duration, $duration),
                    (padding, $padding),
    ), $css-ui-var-prefix, $css-ui-component-name, $css-ui-root-prefix);

    position: relative;
    z-index: 1;
    padding: var(--#{$css-ui-var-prefix}padding) calc(var(--#{$css-ui-var-prefix}padding) * 2.5);

    &::after{
        content: '';
        position: absolute;
        top: 10%;
        left: -10%;
        width: 120%;
        height: 80%;
        border-radius: 4px;
        z-index: -1;
        background: var(--#{$css-ui-var-prefix}color);
        transform: skew(var(--#{$css-ui-var-prefix}tilt));
        transition:
                transform var(--#{$css-ui-var-prefix}duration),
                background var(--#{$css-ui-var-prefix}duration),
                border var(--#{$css-ui-var-prefix}duration);
        opacity: 0.5;
    }

    &.animate-active,
    &.animate-on-active.active,
    &.animate-on-hover:hover {
        &::after{
            background: var(--#{$css-ui-var-prefix}active-color);
            transform: skew(var(--#{$css-ui-var-prefix}active-tilt));
        }
    }

    &.focus-active,
    &.focus-on-active.active,
    &.focus-on-hover:hover {
        &::after{
            border-left: 2em solid var(--#{$css-ui-var-prefix}focus-color);
            border-right: 2em solid var(--#{$css-ui-var-prefix}focus-color);
        }
    }
}

/**
 * Dark Theme (changes from default variables)
 */
@mixin theme-dark-builder{
    %#{$css-ui-class-prefix}#{$css-ui-component-name},
    .#{$css-ui-class-prefix}#{$css-ui-component-name} {
        @include utils.var-builder((
                        (color, $color--dark, color),
                        (on-color, $on-color--dark, on-color),
                        (focus-color, $focus-color--dark, color),
                        (active-color, $active-color--dark, active-color),
                        (active-on-color, $active-on-color--dark, active-on-color),
                        (active-focus-color, $active-focus-color--dark, active-color),
        ), $css-ui-var-prefix, $css-ui-component-name, $css-ui-root-prefix);
    }
}

/**
 * By class
 */
.#{$css-ui-dark-theme-class}{
    @include theme-dark-builder;
}

/**
 * By browser
 */
@media (prefers-color-scheme: dark) {
    @include theme-dark-builder;
}