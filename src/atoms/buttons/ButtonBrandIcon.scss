@use "@guebbit/css-toolkit" as guebbit;


// ------------------- @import clause -------------------
// ------------------------------------------------------

$css-ui-component-name: "simple-button";
@import "../../../src/atoms/buttons/SimpleButton";

$css-ui-component-name: "button-brand-icon";

/*
$css-ui-component-name: "button-brand-icon" !default;

@forward "../../../src/atoms/buttons/SimpleButton";
@use "../../../src/atoms/buttons/SimpleButton" as inherited;
*/

// ------------------------------------------------------
// ------------------------------------------------------


$icon-size: 90px !default;

%#{$css-ui-class-prefix}#{$css-ui-component-name},
.#{$css-ui-class-prefix}#{$css-ui-component-name} {
  @extend %#{$css-ui-class-prefix}simple-button;

  --#{$css-ui-var-prefix}size: var(--#{$css-ui-var-prefix}#{$css-ui-component-name}-size, #{$icon-size});
  // TODO check
  --#{$css-ui-var-prefix}active-outlined-on-background: var(--#{$css-ui-var-prefix}#{$css-ui-component-name}-active-outlined-on-background, #{$active-on-background});
  --#{$css-ui-var-prefix}active-tonal-on-background: var(--#{$css-ui-var-prefix}#{$css-ui-component-name}-active-tonal-on-background, #{$active-on-background});
  --#{$css-ui-var-prefix}active-plain-color: var(--#{$css-ui-var-prefix}#{$css-ui-component-name}-active-plain-color, #{$active-on-background});

  font-size: var(--#{$css-ui-var-prefix}size);
  min-width: 1em;
  min-height: 1em;
  background: transparent;
  text-decoration: none;
  overflow: hidden;
  transition: all var(--#{$css-ui-var-prefix}duration) cubic-bezier(0.31, -0.105, 0.43, 1.59);

  &::before,
  .button-image,
  .button-icon {
    position: absolute;
    transition:
            all var(--#{$css-ui-var-prefix}duration) cubic-bezier(0.31, -0.105, 0.43, 1.59),
            background var(--#{$css-ui-var-prefix}duration);
  }

  &::before {
    content: "";
    z-index: -1;
    background-color: var(--#{$css-ui-var-prefix}background);
    width: 120%;
    height: 120%;
    top: 90%;
    left: -120%;
  }

  .button-icon,
  .button-image{
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  .button-icon {
    font-size: 0.5em;
  }

  .button-image{
    width: 1em;
    height: 1em;
    object-fit: cover;
  }

  &.button-circular{
    &::before{
      border-radius: 50%;
    }
  }

  &.button-rounded{
    &::before{
      transform: rotate(45deg);
    }
  }

  &.button-outlined{
    &::before {
      background-color: var(--#{$css-ui-var-prefix}outlined-background);
    }
  }

  &.button-small {
    font-size: calc(var(--#{$css-ui-var-prefix}size) * 0.5);
  }

  &.animate-active,
  &.animate-on-active.active,
  &.animate-on-hover:hover {
    background: transparent;

    &::before {
      top: -10%;
      left: -10%;
      background: var(--#{$css-ui-var-prefix}active-background);
    }

    img{
      opacity: 0.5;
      transition: opacity var(--#{$css-ui-var-prefix}duration) ease-in-out;
    }
  }
}

/**
 * Dark Theme (changes from default variables)
 */
@mixin theme-dark-builder{
  %#{$css-ui-class-prefix}#{$css-ui-component-name},
  .#{$css-ui-class-prefix}#{$css-ui-component-name} {
    --#{$css-ui-var-prefix}active-outlined-on-background: var(--#{$css-ui-var-prefix}#{$css-ui-component-name}-active-outlined-on-background, #{$active-on-background--dark});
    --#{$css-ui-var-prefix}active-tonal-on-background: var(--#{$css-ui-var-prefix}#{$css-ui-component-name}-active-tonal-on-background, #{$active-on-background--dark});
    --#{$css-ui-var-prefix}active-plain-color: var(--#{$css-ui-var-prefix}#{$css-ui-component-name}-active-plain-color, #{$active-on-background--dark});
  }
}

/**
 * By class
 */
.#{$css-ui-dark-theme-class}{
  @include theme-dark-builder;
}

/**
 * By browser
 */
@media (prefers-color-scheme: dark) {
  @include theme-dark-builder;
}