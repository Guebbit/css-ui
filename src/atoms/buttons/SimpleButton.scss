@use "@guebbit/css-toolkit" as guebbit;
@use "../../utils" as utils;

$css-ui-class-prefix: "" !default;
$css-ui-var-prefix: "" !default;
$css-ui-root-prefix: "--" !default;
$css-ui-dark-theme-class: "theme--dark" !default;
$css-ui-component-name: "simple-button" !default;

// colors
$color: null !default;
$color--light: guebbit.no-null-var(($color, transparent)) !default;
$color--dark: guebbit.no-null-var(($color, transparent)) !default;
$active-color: null !default;
$active-color--light: guebbit.no-null-var(($active-color, $color--light)) !default;
$active-color--dark: guebbit.no-null-var(($active-color, $color--dark)) !default;

// LIGHT theme
$background: $color--light !default;
$on-background: guebbit.color-contrast($color--light) !default;
$shadow-color: #000 !default;
$outlined-background: transparent !default;
$outlined-on-background: guebbit.no-target-var(transparent, $color--light) !default;
$border-color: guebbit.no-target-var(transparent, $color--light) !default;
$plain-color: guebbit.no-target-var(transparent, $color--light) !default;

$active-background: $active-color--light !default;
$active-on-background: guebbit.color-contrast($active-background) !default;
$active-shadow-color: $shadow-color !default;
$active-outlined-background: transparent !default;
$active-outlined-on-background: guebbit.no-target-var(transparent, $active-color--light) !default;
$active-border-color: guebbit.no-target-var(transparent, $active-color--light) !default;
$active-plain-color: guebbit.no-target-var(transparent, $active-color--light) !default;

// DARK theme
$background--dark: $color--dark !default;
$on-background--dark: guebbit.color-contrast($color--dark) !default;
$shadow-color--dark: #000 !default;
$outlined-background--dark: transparent !default;
$outlined-on-background--dark: guebbit.no-target-var(transparent, $color--dark) !default;
$border-color--dark: guebbit.no-target-var(transparent, $color--dark) !default;
$plain-color--dark: guebbit.no-target-var(transparent, $color--dark) !default;

$active-background--dark: $active-color--dark !default;
$active-on-background--dark: guebbit.color-contrast($active-background) !default;
$active-shadow-color--dark: $shadow-color !default;
$active-outlined-background--dark: transparent !default;
$active-outlined-on-background--dark: guebbit.no-target-var(transparent, $active-color--dark) !default;
$active-border-color--dark: guebbit.no-target-var(transparent, $active-color--dark) !default;
$active-plain-color--dark: guebbit.no-target-var(transparent, $active-color--dark) !default;


// generic
$outlined-border-width: 2px !default;
$padding: 8px !default;
$duration: 0.3s !default;
$border-radius: 2px !default;

%#{$css-ui-class-prefix}#{$css-ui-component-name},
.#{$css-ui-class-prefix}#{$css-ui-component-name} {
  @include utils.var-builder((
                  (background, guebbit.extract-colors($background), color),
                  (on-background, guebbit.extract-colors($on-background), on-color),
                  (border-color, guebbit.extract-colors($border-color), color),
                  (outlined-background, guebbit.extract-colors($outlined-background)),
                  (outlined-on-background, guebbit.extract-colors($outlined-on-background), color),
                  (plain-color, guebbit.extract-colors($plain-color), color),
                  (shadow-color, guebbit.extract-colors($shadow-color), shadow-color, false),

                  (active-background, guebbit.extract-colors($active-background), active-color),
                  (active-on-background, guebbit.extract-colors($active-on-background), active-on-color),
                  (active-border-color, guebbit.extract-colors($active-border-color), active-color),
                  (active-outlined-background, guebbit.extract-colors($active-outlined-background)),
                  (active-outlined-on-background, guebbit.extract-colors($active-outlined-on-background), active-color),
                  (active-plain-color, guebbit.extract-colors($active-plain-color), active-color),
                  (active-shadow-color, guebbit.extract-colors($active-shadow-color), shadow-color, false),

                  (outlined-border-width, $outlined-border-width),
                  (padding, $padding),
                  (duration, $duration),
                  (border-radius, $border-radius),
  ), $css-ui-var-prefix, $css-ui-component-name, $css-ui-root-prefix);

  position: relative;
  z-index: 1;
  display: inline-flex;
  align-items: center;
  justify-content: space-evenly;
  font-weight: 500;
  // letter-spacing: 0.08em;
  // line-height: 2;
  text-transform: uppercase;
  gap: calc(var(--#{$css-ui-var-prefix}padding) * 2.5);
  padding: var(--#{$css-ui-var-prefix}padding) calc(var(--#{$css-ui-var-prefix}padding) * 2.5);
  background-color: var(--#{$css-ui-var-prefix}background);
  color: var(--#{$css-ui-var-prefix}on-background);
  border-color: var(--#{$css-ui-var-prefix}border-color);
  border-radius: var(--#{$css-ui-var-prefix}border-radius);
  box-shadow:
          0 2px 4px -1px rgba(var(--#{$css-ui-var-prefix}shadow-color) / var(--#{$css-ui-var-prefix}#{$css-ui-root-prefix}shadow-box-1, .2)),
          0 4px 5px 0 rgba(var(--#{$css-ui-var-prefix}shadow-color) / var(--#{$css-ui-var-prefix}#{$css-ui-root-prefix}shadow-box-2, .14)),
          0 1px 10px 0 rgba(var(--#{$css-ui-var-prefix}shadow-color) / var(--#{$css-ui-var-prefix}#{$css-ui-root-prefix}shadow-box-3, .12));
  cursor: pointer;
  transition-property: box-shadow, transform, opacity, background, color, border;
  transition-duration: var(--#{$css-ui-var-prefix}duration);
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);

  .button-icon {
    height: 1em;
    width: 1em;
    fill: currentcolor;
  }

  .button-image{
    height: 2em;
    width: 2em;
    object-fit: cover;
    border-radius: var(--#{$css-ui-var-prefix}border-radius);
  }

  &.button-small{
    font-size: 0.75em;
    gap: calc(var(--#{$css-ui-var-prefix}padding) * 1.25);
    padding: calc(var(--#{$css-ui-var-prefix}padding) * 0.5) calc(var(--#{$css-ui-var-prefix}padding) * 1.25);
  }

  &.button-plain,
  &.button-flat {
    box-shadow: none !important;
  }

  &.button-icon-only{
    padding: calc(var(--#{$css-ui-var-prefix}padding) * 2);
  }

  &.button-rounded,
  &.button-circular{
    padding: calc(var(--#{$css-ui-var-prefix}padding) * 1.2) !important;
  }

  &.button-rounded{
    border-radius: 28%;

    .button-image{
      border-radius: 28%;
    }
  }

  &.button-circular{
    border-radius: 50%;

    .button-image{
      border-radius: 50%;
    }
  }

  &.button-pill{
    border-radius: 5em;

    .button-image{
      border-radius: 5em;
    }
  }


  &.button-outlined{
    background-color: var(--#{$css-ui-var-prefix}outlined-background);
    color: var(--#{$css-ui-var-prefix}outlined-on-background);
    border-width: var(--#{$css-ui-var-prefix}outlined-border-width);
    border-style: solid;
  }

  &.button-plain {
    background: transparent;
    color: var(--#{$css-ui-var-prefix}plain-color);
  }

  &.animate-active,
  &.animate-on-active.active,
  &.animate-on-hover:hover {
    background-color: var(--#{$css-ui-var-prefix}active-background);
    color: var(--#{$css-ui-var-prefix}active-on-background);
    border-color: var(--#{$css-ui-var-prefix}active-border-color);
    box-shadow:
            0 5px 5px -3px rgba(var(--#{$css-ui-var-prefix}active-shadow-color) / var(--#{$css-ui-var-prefix}#{$css-ui-root-prefix}shadow-box-1, .2)),
            0 8px 10px 1px rgba(var(--#{$css-ui-var-prefix}active-shadow-color) / var(--#{$css-ui-var-prefix}#{$css-ui-root-prefix}shadow-box-2, .14)),
            0 3px 14px 2px rgba(var(--#{$css-ui-var-prefix}active-shadow-color) / var(--#{$css-ui-var-prefix}#{$css-ui-root-prefix}shadow-box-3, .12));

    &.button-outlined {
      background-color: var(--#{$css-ui-var-prefix}active-outlined-background);
      color: var(--#{$css-ui-var-prefix}active-outlined-on-background);
    }

    &.button-plain {
      background: transparent;
      color: var(--#{$css-ui-var-prefix}active-plain-color);
    }
  }
}

/**
 * Dark Theme (changes from default variables)
 */
@mixin theme-dark-builder{
  %#{$css-ui-class-prefix}#{$css-ui-component-name},
  .#{$css-ui-class-prefix}#{$css-ui-component-name} {
    @include utils.var-builder((
                    (background, guebbit.extract-colors($background--dark), color),
                    (on-background, guebbit.extract-colors($on-background--dark), on-color),
                    (border-color, guebbit.extract-colors($border-color--dark), color),
                    (outlined-background, guebbit.extract-colors($outlined-background--dark)),
                    (outlined-on-background, guebbit.extract-colors($outlined-on-background--dark), color),
                    (plain-color, guebbit.extract-colors($plain-color--dark), color),
                    (shadow-color, guebbit.extract-colors($shadow-color), shadow-color, false),

                    (active-background, guebbit.extract-colors($active-background--dark), active-color),
                    (active-on-background, guebbit.extract-colors($active-on-background--dark), active-on-color),
                    (active-border-color, guebbit.extract-colors($active-border-color--dark), active-color),
                    (active-outlined-background, guebbit.extract-colors($active-outlined-background--dark)),
                    (active-outlined-on-background, guebbit.extract-colors($active-outlined-on-background--dark), active-color),
                    (active-plain-color, guebbit.extract-colors($active-plain-color--dark), active-color),
                    (active-shadow-color, guebbit.extract-colors($active-shadow-color), active-shadow-color, false),
    ), $css-ui-var-prefix, $css-ui-component-name, $css-ui-root-prefix);
  }
}

/**
 * By class
 */
.#{$css-ui-dark-theme-class}{
  @include theme-dark-builder;
}

/**
 * By browser
 */
@media (prefers-color-scheme: dark) {
  @include theme-dark-builder;
}
