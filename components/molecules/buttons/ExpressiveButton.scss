
@use "../../../index" as guebbit;

$scss-library-component-name: "expressive-button" !default;

@forward "../../../components/atoms/buttons/SimpleButton";
@use "../../../components/atoms/buttons/SimpleButton" as inherited;
@use "../../../components/atoms/highlights/HighlightRollup" as rollup with (
  $scss-library-var-prefix: inherited.$scss-library-var-prefix + "rollup-",
);
@use "../../../components/atoms/highlights/HighlightPopup" as popup with (
  $scss-library-var-prefix: inherited.$scss-library-var-prefix + "popup-",
);

// main
$special-color: null !default;
$special-color--light: guebbit.noNullVar(($special-color, #000)) !default;
$special-color--dark: guebbit.noNullVar(($special-color, #fff)) !default;
$active-special-color: null !default;
$active-special-color--light: guebbit.noNullVar(($active-special-color, $special-color--light)) !default;
$active-special-color--dark: guebbit.noNullVar(($active-special-color, $special-color--dark)) !default;

// LIGHT theme
$special-on-color: guebbit.color-contrast($special-color--light) !default;
$active-special-on-color: guebbit.color-contrast($active-special-color--light) !default;
$elevation-shadow-color: guebbit.color-shade(inherited.$color--light, 40%) !default;
$elevation-active-shadow-color: guebbit.color-shade(inherited.$active-color--light, 40%) !default;

// DARK theme
$special-on-color--dark: guebbit.color-contrast($special-color--dark) !default;
$active-special-on-color--dark: guebbit.color-contrast($active-special-color--dark) !default;
$elevation-shadow-color--dark: guebbit.color-shade(inherited.$color--dark, 40%) !default;
$elevation-active-shadow-color--dark: guebbit.color-shade(inherited.$active-color--dark, 40%) !default;

// generic
$elevation-height: 8px !default;


%#{inherited.$scss-library-class-prefix}#{$scss-library-component-name},
.#{inherited.$scss-library-class-prefix}#{$scss-library-component-name} {
  @extend %#{inherited.$scss-library-class-prefix}simple-button;
  --#{inherited.$scss-library-var-prefix}special-color: var(--#{inherited.$scss-library-var-prefix}#{$scss-library-component-name}-special-color, #{$special-color--light});
  --#{inherited.$scss-library-var-prefix}special-on-color: var(--#{inherited.$scss-library-var-prefix}#{$scss-library-component-name}-special-on-color, #{$special-on-color});
  --#{inherited.$scss-library-var-prefix}active-special-color: var(--#{inherited.$scss-library-var-prefix}#{$scss-library-component-name}-active-special-color, #{$active-special-color--light});
  --#{inherited.$scss-library-var-prefix}active-special-on-color: var(--#{inherited.$scss-library-var-prefix}#{$scss-library-component-name}-active-special-on-color, #{$active-special-on-color});
  --#{inherited.$scss-library-var-prefix}elevation-shadow-color: var(--#{inherited.$scss-library-var-prefix}#{$scss-library-component-name}-elevation-shadow-color, #{$elevation-shadow-color});
  --#{inherited.$scss-library-var-prefix}elevation-active-shadow-color: var(--#{inherited.$scss-library-var-prefix}#{$scss-library-component-name}-elevation-active-shadow-color, #{$elevation-active-shadow-color});
  --#{inherited.$scss-library-var-prefix}elevation-height: var(--#{inherited.$scss-library-var-prefix}#{$scss-library-component-name}-elevation-height, #{$elevation-height});

  --#{inherited.$scss-library-var-prefix}active-on-background: var(--#{inherited.$scss-library-var-prefix}special-on-color);

  &.rollup-button {
    @extend %#{inherited.$scss-library-class-prefix}highlight-rollup;
    --#{inherited.$scss-library-var-prefix}active-background: var(--#{inherited.$scss-library-var-prefix}background);
    --#{inherited.$scss-library-var-prefix}rollup-color: var(--#{inherited.$scss-library-var-prefix}special-color);
    --#{inherited.$scss-library-var-prefix}rollup-active-color: var(--#{inherited.$scss-library-var-prefix}active-special-color);
    --#{inherited.$scss-library-var-prefix}active-outlined-on-background: var(--#{inherited.$scss-library-var-prefix}special-on-color);
    --#{inherited.$scss-library-var-prefix}active-border-color: var(--#{inherited.$scss-library-var-prefix}special-color);
  }

  &.popup-button {
    @extend %#{inherited.$scss-library-class-prefix}highlight-popup;
    --#{inherited.$scss-library-var-prefix}popup-color: var(--#{inherited.$scss-library-var-prefix}special-color);
    --#{inherited.$scss-library-var-prefix}popup-active-color: var(--#{inherited.$scss-library-var-prefix}active-special-color);
    --#{inherited.$scss-library-var-prefix}popup-border-width: var(--#{inherited.$scss-library-var-prefix}outlined-border-width);
    --#{inherited.$scss-library-var-prefix}active-outlined-on-background: var(--#{inherited.$scss-library-var-prefix}special-on-color);
    --#{inherited.$scss-library-var-prefix}active-border-color: var(--#{inherited.$scss-library-var-prefix}special-color);
    background-color: transparent !important;

    &.button-outlined{
      border: none !important;

      &::after{
        border-width: var(--#{inherited.$scss-library-var-prefix}border-width);
        border-style: solid;
        border-color: var(--#{inherited.$scss-library-var-prefix}border-color);
      }
    }

    &.button-rounded{
      &::before,
      &::after{
        border-radius: 28%;
      }
    }

    &.button-circular{
      &::before,
      &::after{
        border-radius: 50%;
      }
    }
  }

  &.strong-elevation{
    box-shadow: 0 var(--#{inherited.$scss-library-var-prefix}elevation-height) 0 var(--#{inherited.$scss-library-var-prefix}elevation-shadow-color), 0 0 3px rgba(#000, 0.2);

    &.button-outlined{
      border-bottom-color: var(--#{inherited.$scss-library-var-prefix}elevation-shadow-color);
    }

    &.animate-active,
    &.animate-on-active.active,
    &.animate-on-hover:hover {
      // shift button downwards by shadow depth amount
      box-shadow: 0 0 0 var(--#{inherited.$scss-library-var-prefix}elevation-active-shadow-color), 0 0 0 rgba(#000, 0.2);
      transform: translate3d(0, var(--#{inherited.$scss-library-var-prefix}elevation-height), 0);
    }
  }

  &.animate-active,
  &.animate-on-active.active,
  &.animate-on-hover:hover {
    &.button-outlined{
      &::after{
        border-color: var(--#{inherited.$scss-library-var-prefix}active-border-color);
      }
    }
  }
}

/**
 * Dark Theme (changes from default variables)
 */
@mixin theme-dark-builder(){
  %#{inherited.$scss-library-class-prefix}#{$scss-library-component-name},
  .#{inherited.$scss-library-class-prefix}#{$scss-library-component-name} {
    --#{inherited.$scss-library-var-prefix}special-color: var(--#{inherited.$scss-library-var-prefix}#{$scss-library-component-name}-special-color, #{$special-color--dark});
    --#{inherited.$scss-library-var-prefix}special-on-color: var(--#{inherited.$scss-library-var-prefix}#{$scss-library-component-name}-special-on-color, #{$special-on-color--dark});
    --#{inherited.$scss-library-var-prefix}active-special-color: var(--#{inherited.$scss-library-var-prefix}#{$scss-library-component-name}-active-special-color, #{$active-special-color--dark});
    --#{inherited.$scss-library-var-prefix}active-special-on-color: var(--#{inherited.$scss-library-var-prefix}#{$scss-library-component-name}-active-special-on-color, #{$active-special-on-color--dark});
    --#{inherited.$scss-library-var-prefix}elevation-shadow-color: var(--#{inherited.$scss-library-var-prefix}#{$scss-library-component-name}-elevation-shadow-color, #{$elevation-shadow-color--dark});
    --#{inherited.$scss-library-var-prefix}elevation-active-shadow-color: var(--#{inherited.$scss-library-var-prefix}#{$scss-library-component-name}-elevation-active-shadow-color, #{$elevation-active-shadow-color--dark});
  }
}

/**
 * By class
 */
.#{inherited.$scss-library-dark-theme-class}{
  @include theme-dark-builder();
}

/**
 * By browser
 */
@media (prefers-color-scheme: dark) {
  @include theme-dark-builder();
}
