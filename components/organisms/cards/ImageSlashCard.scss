@use "../../../index" as guebbit;

$scss-library-prefix: "" !default;
$scss-library-component-name: "image-slash-card" !default;
$scss-library-var-prefix: "" !default;

@forward "../../../components/molecules/cards/SimpleCard" with (
  $scss-library-prefix: $scss-library-prefix !default,
  $scss-library-var-prefix: $scss-library-var-prefix !default,
  $scss-library-component-name: "simple-card",
);
@use "../../../components/molecules/cards/SimpleCard" as inherited;

$height: 400px !default;
$button-background: inherited.$color !default;
$button-on-background: guebbit.color-contrast($button-background) !default;
$text-shadow: rgba(#000, 0.3) !default;

.image-slash-card{
  @extend %#{$scss-library-prefix}simple-card;

  --#{$scss-library-var-prefix}height: #{$height};
  --#{$scss-library-var-prefix}button-background: #{$button-background};
  --#{$scss-library-var-prefix}button-on-background: #{$button-on-background};
  --#{$scss-library-var-prefix}text-shadow: #{$text-shadow};

  flex-direction: row;
  // WARNING height is necessary only because *border-width* doesn't get % values, only statics
  min-height: var(--#{$scss-library-var-prefix}height);
  text-shadow: 2px 2px 4px var(--#{$scss-library-var-prefix}text-shadow);

  .card-content{
    display: flex;
    flex-direction: column;
    justify-content: center;
  }

  .card-image-wrapper{
    position: relative;
    width: 55%;
    flex-shrink: 0;
    border-radius: var(--#{$scss-library-var-prefix}border-radius) 0 0 var(--#{$scss-library-var-prefix}border-radius);

    &::after{
      content: "";
      position: absolute;
      height: 100%;
      width: 100%;
      border-style: solid;
      border-width: var(--#{$scss-library-var-prefix}height) calc(var(--#{$scss-library-var-prefix}height) * 0.2) 0 0;
      border-color: transparent var(--#{$scss-library-var-prefix}background) transparent transparent;
    }

    .card-actions {
      position: absolute;
      top: 0;
      right: 0;
      height: 100%;
      flex-direction: column;
      z-index: 2;

      & > * {
        background: var(--#{$scss-library-var-prefix}button-background);
        color: var(--#{$scss-library-var-prefix}button-on-background);

        // TODO dynamic number
        &:nth-child(1){
          top: 15%;
          right: -15%;
        }

        &:nth-child(2){
          top: 30%;
          right: 30%;
        }

        &:nth-child(3){
          top: 45%;
          right: 90%;
        }

        &:nth-child(n+4){
          display: none;
        }
      }
    }
  }

  &.card-image-right{
    .card-image-wrapper{
      order: 2;
      border-radius: 0 var(--#{$scss-library-var-prefix}border-radius) var(--#{$scss-library-var-prefix}border-radius) 0;

      &::after{
        border-width: var(--#{$scss-library-var-prefix}height) 0 0 calc(var(--#{$scss-library-var-prefix}height) * 0.2);
        border-color: transparent transparent transparent var(--#{$scss-library-var-prefix}background);
      }

      .card-actions {
        right: auto;
        left: 0;

        & > * {
          &:nth-child(1){
            left: -15%;
          }

          &:nth-child(2){
            left: 30%;
          }

          &:nth-child(3){
            left: 90%;
          }
        }
      }
    }
  }
}