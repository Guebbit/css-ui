@use "../../../index" as guebbit;

$scss-library-prefix: "" !default;
$scss-library-component-name: "button-brand-icon" !default;
$scss-library-var-prefix: "" !default;

$button-brand-icon-size: 90px !default;

@forward "../../../components/atoms/buttons/SimpleButton" with (
  $simple-button-duration: 0.5s !default,
  $scss-library-prefix: $scss-library-prefix !default,
  $scss-library-var-prefix: $scss-library-var-prefix !default,
  $scss-library-component-name: "simple-button",
);
@use "../../../components/atoms/buttons/SimpleButton" as inherited;


%#{$scss-library-prefix}#{$scss-library-component-name},
.#{$scss-library-prefix}#{$scss-library-component-name} {
  @extend %#{$scss-library-prefix}simple-button;

  --#{$scss-library-var-prefix}size: #{$button-brand-icon-size};
  --#{$scss-library-var-prefix}on-color: #{inherited.$simple-button-color};
  --#{$scss-library-var-prefix}active-outlined-on-color: #{inherited.$simple-button-active-on-color};
  --#{$scss-library-var-prefix}active-tonal-on-color: #{inherited.$simple-button-active-on-color};
  --#{$scss-library-var-prefix}active-plain-color: #{inherited.$simple-button-active-on-color};

  font-size: var(--#{$scss-library-var-prefix}size);
  min-width: 1em;
  min-height: 1em;
  background: transparent;
  text-decoration: none;
  overflow: hidden;
  transition: all var(--#{$scss-library-var-prefix}duration) cubic-bezier(0.31, -0.105, 0.43, 1.59);

  &::before,
  .button-image,
  .button-icon {
    position: absolute;
    transition:
            all var(--#{$scss-library-var-prefix}duration) cubic-bezier(0.31, -0.105, 0.43, 1.59),
            background var(--#{$scss-library-var-prefix}duration);
  }

  &::before {
    content: "";
    z-index: -1;
    background-color: var(--#{$scss-library-var-prefix}color);
    width: 120%;
    height: 120%;
    top: 90%;
    left: -120%;
  }

  .button-icon,
  .button-image{
    top: 50%;
    left: 50%;
    transform: translate(-50%, -50%);
  }

  .button-icon {
    font-size: 0.5em;
  }

  .button-image{
    width: 1em;
    height: 1em;
    object-fit: cover;
  }

  &.button-circular{
    &::before{
      border-radius: 50%;
    }
  }

  &.button-rounded{
    &::before{
      transform: rotate(45deg);
    }
  }

  &.button-outlined{
    &::before {
      background-color: var(--#{$scss-library-var-prefix}outlined-color);
    }
  }

  &.button-small {
    font-size: calc(var(--#{$scss-library-var-prefix}size) * 0.5);
  }

  &.animate-active,
  &.animate-on-active.active,
  &.animate-on-hover:hover {
    background: transparent;

    &::before {
      top: -10%;
      left: -10%;
      background: var(--#{$scss-library-var-prefix}active-color);
    }

    img{
      opacity: 0.5;
      transition: opacity var(--#{$scss-library-var-prefix}duration) ease-in-out;
    }
  }
}
