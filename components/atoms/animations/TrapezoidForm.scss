@use "../../../index" as guebbit;

$scss-library-prefix: "" !default;
$scss-library-component-name: "trapezoid-form" !default;
$scss-library-var-prefix: "" !default;

// colors
$color: #000 !default;
$on-color: guebbit.color-contrast($color) !default;

$opacity: 1 !default;
$border-size: 2px !default;
$border-radius: 4px !default;
$duration: 0.3s !default;
$transform-rotate: 2deg !default;
$transform-scale: 1 !default;
$position-top: 5% !default;
$position-left: 0 !default;

// on active
$active-color: $color !default;
$active-on-color: guebbit.color-contrast($active-color) !default;
$active-transform-rotate: $transform-rotate !default;
$active-transform-scale: $transform-scale !default;
$active-position-top: $position-top !default;
$active-position-left: $position-left !default;


%#{$scss-library-prefix}#{$scss-library-component-name}active{
  background-color: var(--#{$scss-library-var-prefix}active-color);
  color: var(--#{$scss-library-var-prefix}active-on-color);
  top: var(--#{$scss-library-var-prefix}active-position-top);
  left: var(--#{$scss-library-var-prefix}active-position-left);
  transform: perspective(10px) rotateX(var(--#{$scss-library-var-prefix}active-transform-rotate)) scale(var(--#{$scss-library-var-prefix}active-transform-scale));

  &.trapezoid-form-outlined{
      color: var(--#{$scss-library-var-prefix}active-color);
      background-color: transparent;
      border-color: var(--#{$scss-library-var-prefix}active-color);
  }
}

%#{$scss-library-prefix}#{$scss-library-component-name},
.#{$scss-library-prefix}#{$scss-library-component-name} {
  --#{$scss-library-var-prefix}color: #{$color};
  --#{$scss-library-var-prefix}on-color: #{$on-color};
  --#{$scss-library-var-prefix}active-color: #{$active-color};
  --#{$scss-library-var-prefix}active-on-color: #{$active-on-color};
  --#{$scss-library-var-prefix}transform-rotate: #{$transform-rotate};
  --#{$scss-library-var-prefix}transform-scale: #{$transform-scale};
  --#{$scss-library-var-prefix}position-top: #{$position-top};
  --#{$scss-library-var-prefix}position-left: #{$position-left};
  --#{$scss-library-var-prefix}active-transform-rotate: #{$active-transform-rotate};
  --#{$scss-library-var-prefix}active-transform-scale: #{$active-transform-scale};
  --#{$scss-library-var-prefix}active-position-top: #{$active-position-top};
  --#{$scss-library-var-prefix}active-position-left: #{$active-position-left};
  --#{$scss-library-var-prefix}opacity: #{$opacity};
  --#{$scss-library-var-prefix}border-size: #{$border-size};
  --#{$scss-library-var-prefix}border-radius: #{$border-radius};
  --#{$scss-library-var-prefix}duration: #{$duration};

  position: absolute;
  top: var(--#{$scss-library-var-prefix}position-top);
  left: var(--#{$scss-library-var-prefix}position-left);
  width: 100%;
  height: 90%;
  z-index: -1;
  display: flex;
  justify-content: center;
  align-items: center;
  text-align: center;
  transform: perspective(10px) rotateX(var(--#{$scss-library-var-prefix}transform-rotate)) scale(var(--#{$scss-library-var-prefix}transform-scale));
  opacity: var(--#{$scss-library-var-prefix}opacity);
  background-color: var(--#{$scss-library-var-prefix}color);
  color: var(--#{$scss-library-var-prefix}on-color);
  transition-property: box-shadow, transform, opacity, background, top, left, border-color;
  transition-duration: var(--#{$scss-library-var-prefix}duration);
  transition-timing-function: cubic-bezier(0.4, 0, 0.2, 1);
  border-radius: var(--#{$scss-library-var-prefix}border-radius);

  &.trapezoid-form-outlined{
    color: var(--#{$scss-library-var-prefix}color);
    background-color: transparent;
    border-width: var(--#{$scss-library-var-prefix}border-size);
    border-style: solid;
    border-color: var(--#{$scss-library-var-prefix}color);
  }

  &.animate-active,
  &.animate-on-active.active,
  &.animate-on-hover:hover {
    @extend %#{$scss-library-prefix}#{$scss-library-component-name}active;
  }
}

.#{$scss-library-prefix}#{$scss-library-component-name}-animate-active,
.#{$scss-library-prefix}#{$scss-library-component-name}-animate-on-active.active,
.#{$scss-library-prefix}#{$scss-library-component-name}-animate-on-hover:hover {
  .#{$scss-library-prefix}#{$scss-library-component-name} {
    @extend %#{$scss-library-prefix}#{$scss-library-component-name}active;
  }
}



/**
 * Dark Theme (changes from default variables)
 */
@mixin theme-dark-builder(){
  %#{$scss-library-prefix}#{$scss-library-component-name},
  .#{$scss-library-prefix}#{$scss-library-component-name} {
    --#{$scss-library-var-prefix}xxxxxxxxxxxxxx: #{$xxxxxxxxxxxxxxxxx};
  }
}

/**
 * By class
 */
.#{$scss-library-dark-theme-class}{
  @include theme-dark-builder();
}

/**
 * By browser
 */
@media (prefers-color-scheme: dark) {
  @include theme-dark-builder();
}
