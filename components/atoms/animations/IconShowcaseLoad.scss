@use "sass:math";
@use "../../../index" as guebbit;

$scss-library-prefix: "" !default;
$scss-library-var-prefix: "" !default;
$scss-library-dark-theme-class: "theme--dark" !default;
$scss-library-component-name: "icon-showcase-load" !default;

// main
$color: null !default;

// LIGHT Theme
$color--light: guebbit.noNullVar(($color, #000)) !default;
$border: rgba($color--light, 0.8) !default;
$border-progress: rgba($color--light, 0.48) !default;
$background: guebbit.color-contrast($color--light) !default;

// DARK Theme
$color--dark: guebbit.noNullVar(($color, #fff)) !default;
$border--dark: rgba($color--dark, 0.8) !default;
$border-progress--dark: rgba($color--dark, 0.48) !default;
$background--dark: guebbit.color-contrast($color--dark) !default;

// generic
$size: 4em !default;
$duration: 4s !default;
$item-number: 3 !default;

%#{$scss-library-prefix}#{$scss-library-component-name},
.#{$scss-library-prefix}#{$scss-library-component-name}{
  --#{$scss-library-var-prefix}color: #{$color};
  --#{$scss-library-var-prefix}border: #{$border};
  --#{$scss-library-var-prefix}border-progress: #{$border-progress};
  --#{$scss-library-var-prefix}background: #{$background};
  --#{$scss-library-var-prefix}size: #{$size};

  font-size: var(--#{$scss-library-var-prefix}size);
  background-color: var(--#{$scss-library-var-prefix}background);
  position: relative;
  border-radius: 50%;
  width: 1em;
  height: 1em;
  padding: 0.1em;

  &::before {
    content: "";
    position: absolute;
    top: 0.1em;
    left: 0.1em;
    border: 0.1em solid var(--#{$scss-library-var-prefix}border);
    border-left-color: var(--#{$scss-library-var-prefix}border-progress);
    border-radius: 50%;
    width: 0.8em;
    height: 0.8em;
    animation: #{$scss-library-prefix}#{$scss-library-component-name}-animation-rotate 1s infinite linear;
  }

  & > * {
    display: flex;
    justify-content: center;
    align-items: center;
    position: absolute;
    inset: 0;
    margin: auto;
    color: var(--#{$scss-library-var-prefix}color);
    font-size: 0.4em;
    width: 1em;
    height: 1em;
    border-radius: 50%;
    line-height: 1;
    transform: scale(0) translate3d(0, 0, 0);
    text-align: center;
    animation-name: #{$scss-library-prefix}#{$scss-library-component-name}-animation;
    animation-iteration-count: infinite;
    animation-timing-function: ease-in-out;
    animation-duration: $duration;
    
    @for $i from 1 through $item-number {
      &:nth-child(#{$i}){
        animation-delay: $duration * math.div(($i - 1), $item-number);
      }
    }
  }

  svg{
    fill: currentcolor;
    stroke: currentcolor;
  }
  
  @keyframes #{$scss-library-prefix}#{$scss-library-component-name}-animation {
    0% {  transform: scale(0) translate3d(0, 0, 0); }
    11% { transform: scale(1.2) translate3d(0, 0, 0); }
    22% { transform: scale(1) translate3d(0, 0, 0); }
    33% { transform: scale(0) translate3d(0, 0, 0); }
  }

  @keyframes #{$scss-library-prefix}#{$scss-library-component-name}-animation-rotate {
    to { transform: rotate(360deg); }
  }
}

/**
 * Dark Theme (changes from default variables)
 */
@mixin theme-dark-builder(){
  %#{$scss-library-prefix}#{$scss-library-component-name},
  .#{$scss-library-prefix}#{$scss-library-component-name} {
    --#{$scss-library-var-prefix}color: #{$color--dark};
    --#{$scss-library-var-prefix}border: #{$border--dark};
    --#{$scss-library-var-prefix}border-progress: #{$border-progress--dark};
    --#{$scss-library-var-prefix}background: #{$background--dark};
  }
}

/**
 * By class
 */
.#{$scss-library-dark-theme-class}{
  @include theme-dark-builder();
}

/**
 * By browser
 */
@media (prefers-color-scheme: dark) {
  @include theme-dark-builder();
}

